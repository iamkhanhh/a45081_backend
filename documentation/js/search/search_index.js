var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Analysis.html",[0,1.352,1,2.215]],["body/entities/Analysis.html",[0,1.161,1,1.902,2,0.612,3,0.085,4,0.085,5,0.066,6,1.603,7,0.294,8,1.267,9,4.022,10,3.582,11,3.582,12,2.012,13,3.582,14,3.582,15,3.582,16,3.582,17,0.998,18,4.141,19,2.719,20,0.919,21,4.141,22,4.141,23,3.582,24,3.214,25,3.582,26,2.012,27,2.012,28,4.141,29,3.214,30,3.582,31,4.141,32,1.176,33,0.016,34,2.833,35,2.007,36,2.939,37,3.309,38,3.582,39,2.426,40,1.261,41,2.065,42,1.403,43,4.15,44,2.065,45,2.065,46,1.118,47,2.565,48,2.393,49,2.996,50,2.065,51,2.065,52,2.092,53,3.675,54,2.065,55,2.065,56,2.065,57,2.243,58,2.065,59,2.065,60,2.862,61,2.243,62,2.065,63,2.065,64,2.065,65,2.065,66,2.065,67,2.065,68,2.065,69,2.065,70,2.065,71,1.118,72,1.792,73,2.065,74,2.065,75,2.065,76,2.065,77,2.065,78,0.135,79,1.792,80,1.792,81,0.827,82,0.136,83,1.786,84,1.786,85,3.582,86,2.862,87,1.003,88,1.356,89,2.348,90,1.603,91,1.786,92,1.786,93,1.786,94,1.786,95,1.786,96,1.786,97,1.786,98,1.786,99,1.786,100,1.603,101,0.059,102,2.348,103,2.065,104,1.334,105,2.065,106,2.065,107,2.065,108,2.065,109,4.42,110,2.065,111,2.065,112,2.065,113,2.065,114,2.065,115,2.065,116,2.065,117,2.065,118,2.065,119,0.007,120,0.007]],["title/controllers/AnalysisController.html",[121,1.242,122,2.735]],["body/controllers/AnalysisController.html",[1,1.742,3,0.124,4,0.124,5,0.097,7,0.432,17,1.681,20,1.369,32,0.966,33,0.016,35,1.76,40,1.105,42,1.421,52,1.834,78,0.38,82,0.124,101,0.087,104,1.555,119,0.009,120,0.009,121,0.977,122,3.154,123,0.977,124,2.622,125,1.642,126,1.317,127,1.373,128,2.321,129,1.954,130,2.469,131,4.552,132,1.78,133,1.702,134,2.622,135,3.95,136,2.85,137,3.031,138,1.906,139,1.906,140,1.911,141,3.031,142,1.333,143,2.554,144,3.031,145,3.031,146,4.113,147,3.549,148,4.444,149,3.031,150,3.449,151,1.954,152,1.214,153,2.554,154,3.031,155,1.333,156,4.487,157,2.918,158,3.031,159,2.407,160,1.742,161,1.642,162,1.642,163,3.154,164,1.99,165,0.543,166,3.223,167,2.622,168,1.11,169,3.449,170,1.214,171,3.031,172,1.4,173,1.472,174,1.857,175,3.031,176,3.031,177,1.857,178,3.031,179,2.622,180,2.622,181,2.622,182,1.864,183,3.031,184,2.622,185,1.857,186,3.031,187,1.742,188,3.031]],["title/modules/AnalysisModule.html",[189,1.242,190,2.531]],["body/modules/AnalysisModule.html",[1,2.578,2,1.33,3,0.184,4,0.184,5,0.143,33,0.016,78,0.478,82,0.184,101,0.128,119,0.012,120,0.012,122,4.597,123,1.878,165,0.804,166,4.76,167,3.88,189,2.087,190,4.871,191,1.972,192,1.972,193,2.179,194,2.179,195,1.972,196,3.147,197,3.147,198,3.88,199,3.88,200,3.88,201,2.832,202,2.179,203,2.071,204,4.486,205,4.486,206,2.748,207,1.972,208,3.351,209,3.88,210,2.578,211,4.486]],["title/injectables/AnalysisService.html",[166,2.36,212,0.855]],["body/injectables/AnalysisService.html",[1,3.67,2,0.661,3,0.092,4,0.092,5,0.071,7,0.318,9,1.731,12,2.116,17,1.444,19,2.861,20,1.329,23,3.043,25,1.929,26,2.116,27,2.116,29,4.647,30,1.929,32,0.895,33,0.016,40,1.026,42,0.967,48,1.03,52,2.095,61,1.905,78,0.407,81,0.893,82,0.092,87,2.779,101,0.064,104,1.444,119,0.007,120,0.007,126,1.043,127,1.087,128,1.981,129,1.547,130,2.19,131,3.043,132,1.409,133,1.347,134,3.043,135,3.297,138,1.767,139,1.767,140,1.839,142,1.547,146,4.059,147,3.912,151,1.547,152,1.409,155,1.547,156,3.932,165,0.4,166,2.155,168,0.817,169,2.73,170,0.893,182,2.399,207,0.981,212,0.781,213,0.893,214,1.929,215,1.624,216,2.23,217,3.248,218,3.243,219,2.23,220,3.518,221,2.23,222,2.23,223,2.23,224,3.518,225,2.23,226,1.583,227,4.357,228,2.31,229,2.23,230,2.23,231,1.366,232,1.465,233,2.497,234,1.929,235,2.23,236,1.905,237,3.03,238,1.465,239,1.475,240,3.043,241,3.239,242,3.381,243,3.769,244,3.043,245,3.381,246,2.23,247,3.381,248,1.731,249,3.518,250,2.23,251,1.929,252,1.929,253,2.155,254,2.23,255,3.769,256,2.23,257,2.23,258,2.23,259,2.23,260,2.23,261,2.23,262,2.23,263,2.23,264,2.23,265,2.155,266,2.155,267,1.929,268,1.465,269,2.23,270,1.208,271,1.929,272,1.929,273,2.23,274,1.465,275,1.366]],["title/controllers/AppController.html",[121,1.242,276,2.735]],["body/controllers/AppController.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,121,2.148,123,1.792,165,0.996,172,2.567,173,2.701,276,4.732,277,4.81,278,4.374,279,4.81]],["title/modules/AppModule.html",[189,1.242,280,2.735]],["body/modules/AppModule.html",[1,2.328,2,1.2,3,0.11,4,0.11,5,0.085,32,0.419,33,0.016,39,2.998,78,0.491,82,0.11,101,0.076,119,0.008,120,0.008,123,1.305,165,0.48,189,1.574,190,4.044,191,1.177,192,1.177,193,1.3,194,1.3,195,1.177,196,2.374,197,1.3,201,1.967,202,1.3,203,1.236,206,1.639,207,1.177,208,2.328,210,2.328,228,1.757,239,1.122,276,3.468,278,3.772,279,2.315,280,5.344,281,2.315,282,2.315,283,2.315,284,4.044,285,4.044,286,4.044,287,4.044,288,3.772,289,4.044,290,2.676,291,2.676,292,2.315,293,2.676,294,2.077,295,2.676,296,4.05,297,1.899,298,1.899,299,2.676,300,2.315,301,2.676,302,3.143,303,2.077,304,4.05,305,2.676,306,2.874,307,2.66,308,2.328,309,2.328,310,2.481,311,2.194,312,2.328,313,2.194,314,2.676,315,2.676,316,2.676,317,2.676,318,2.676,319,1.757,320,2.676,321,2.676,322,2.676,323,2.676,324,2.676,325,2.676,326,2.315,327,2.676,328,4.05,329,2.676,330,4.05,331,2.676,332,2.676,333,2.676,334,2.315,335,1.538,336,2.676,337,2.315,338,2.676,339,2.676,340,2.676,341,2.315,342,2.315,343,2.676,344,2.676,345,2.676,346,2.676,347,2.676,348,2.315,349,2.676,350,2.315,351,2.676,352,2.676,353,2.676,354,2.676,355,1.449,356,2.676,357,2.676,358,2.676,359,2.676,360,2.077,361,2.676,362,2.676]],["title/injectables/AppService.html",[212,0.855,278,2.36]],["body/injectables/AppService.html",[3,0.221,4,0.221,5,0.172,7,0.767,33,0.016,40,0.924,42,1.279,78,0.353,82,0.221,101,0.154,104,1.299,119,0.013,120,0.013,126,1.939,140,1.597,165,0.966,212,1.452,213,2.158,278,4.007,363,4.661,364,7.327,365,5.388,366,5.388,367,5.388]],["title/controllers/AuthController.html",[121,1.242,368,2.735]],["body/controllers/AuthController.html",[3,0.109,4,0.109,5,0.084,7,0.378,17,1.171,20,1.362,26,2.36,32,0.849,33,0.016,35,1.74,39,2.488,40,1.052,42,1.06,78,0.402,82,0.109,101,0.076,104,1.48,119,0.008,120,0.008,121,0.854,123,0.854,125,1.436,126,1.192,130,1.86,136,1.436,138,1.896,139,1.896,140,1.819,150,4.948,151,1.165,159,2.631,161,1.436,163,3.448,165,0.475,168,0.971,173,1.288,181,2.293,182,1.112,203,1.224,215,1.224,236,1.436,241,1.288,253,2.463,265,2.976,266,2.463,275,2.463,300,2.293,334,2.293,348,3.478,355,2.178,368,2.854,369,2.293,370,3.77,371,3.77,372,4.021,373,4.021,374,3.121,375,4.858,376,2.293,377,2.65,378,4.021,379,2.65,380,3.478,381,2.65,382,4.858,383,2.65,384,2.65,385,2.65,386,4.021,387,2.65,388,2.65,389,4.021,390,2.65,391,5.829,392,2.057,393,3.526,394,2.65,395,2.65,396,2.65,397,5.423,398,2.65,399,2.65,400,2.65,401,2.792,402,2.057,403,1.881,404,2.65,405,4.524,406,1.881,407,2.057,408,2.65,409,2.65,410,2.65,411,2.65,412,3.121,413,2.65,414,2.65,415,4.021,416,4.021,417,4.021,418,5.423,419,4.021,420,4.021,421,4.021,422,4.021,423,2.65,424,2.65,425,2.65,426,2.65,427,2.65,428,2.65,429,2.65,430,2.65,431,2.65,432,2.65,433,2.65,434,2.65,435,2.65]],["title/guards/AuthGuard.html",[313,2.087,436,2.991]],["body/guards/AuthGuard.html",[3,0.156,4,0.156,5,0.121,7,0.54,20,1.156,32,0.815,33,0.016,35,1.034,39,2.668,40,0.893,78,0.42,82,0.156,101,0.108,104,1.256,119,0.01,120,0.01,126,1.544,130,2.279,138,1.609,139,1.609,140,1.123,163,2.69,165,0.679,172,1.75,182,1.589,212,1.156,215,1.75,236,2.053,239,2.184,241,2.891,270,2.821,297,2.69,313,2.821,412,2.941,437,3.79,438,3.278,439,5.543,440,3.79,441,6.004,442,6.15,443,3.79,444,4.506,445,5.543,446,3.79,447,2.941,448,4.043,449,2.69,450,2.69,451,2.69,452,3.79,453,4.043,454,3.278,455,3.278,456,3.278,457,3.79,458,5.543,459,3.79,460,3.79,461,3.79,462,3.79,463,3.278,464,4.043,465,3.79,466,3.278,467,3.79,468,3.79,469,3.278,470,3.278,471,3.278]],["title/modules/AuthModule.html",[189,1.242,284,2.531]],["body/modules/AuthModule.html",[3,0.152,4,0.152,5,0.118,33,0.016,39,1.89,78,0.485,82,0.152,101,0.105,119,0.01,120,0.01,123,1.647,130,1.413,165,0.661,189,1.891,191,1.622,192,1.622,193,1.792,194,1.792,195,1.622,196,2.85,197,2.85,201,2.484,202,1.792,203,1.704,210,2.939,284,4.985,288,4.216,292,3.192,294,2.864,313,3.897,326,3.192,368,4.164,401,3.956,402,2.864,451,2.618,466,3.192,472,3.192,473,3.69,474,3.192,475,3.192,476,4.52,477,4.52,478,3.69,479,3.69,480,5.113,481,6.335,482,5.113,483,2.26,484,3.69,485,3.69,486,3.69,487,3.69,488,3.69,489,3.69,490,3.69,491,3.69,492,3.69,493,3.69]],["title/injectables/AuthService.html",[212,0.855,401,2.215]],["body/injectables/AuthService.html",[2,0.806,3,0.112,4,0.112,5,0.087,7,0.387,17,1.421,20,1.375,32,0.97,33,0.016,40,1.062,42,1.324,52,1.403,78,0.406,82,0.112,101,0.078,104,1.494,119,0.008,120,0.008,126,1.215,130,2.802,138,1.914,139,1.914,140,1.747,151,2.415,165,0.487,168,0.996,182,2.598,212,0.909,213,1.088,215,1.892,231,1.665,236,2.219,239,2.303,241,2.396,270,2.975,274,1.785,311,1.472,335,3.156,337,4.267,355,1.472,370,3.18,371,3.18,374,3.18,376,3.545,380,2.351,392,3.18,393,3.387,401,2.355,406,1.929,412,2.109,441,5.562,448,3.18,450,1.929,451,1.929,464,2.109,494,2.351,495,4.098,496,4.098,497,2.718,498,3.56,499,2.718,500,2.718,501,3.545,502,2.718,503,2.835,504,4.098,505,2.718,506,2.718,507,4.098,508,2.718,509,2.109,510,2.351,511,2.718,512,1.929,513,2.718,514,2.718,515,2.351,516,2.718,517,1.785,518,2.718,519,1.785,520,2.718,521,2.718,522,2.718,523,2.718,524,4.933,525,2.109,526,4.267,527,3.828,528,2.109,529,2.351,530,3.545,531,4.098,532,3.18,533,2.351,534,2.109,535,4.098,536,2.718,537,2.718,538,2.718,539,2.718,540,2.718,541,2.718,542,2.718]],["title/classes/CreateAnalysisDto.html",[101,0.11,135,2.36]],["body/classes/CreateAnalysisDto.html",[3,0.244,4,0.244,5,0.189,33,0.015,82,0.244,101,0.17,119,0.014,120,0.014,135,4.247,543,2.084,544,5.138,545,4.61]],["title/classes/CreateAuthDto.html",[101,0.11,393,2.215]],["body/classes/CreateAuthDto.html",[3,0.181,4,0.181,5,0.141,7,0.629,8,2.209,32,1.107,33,0.016,35,1.93,40,1.212,42,1.495,78,0.289,82,0.181,101,0.165,119,0.012,120,0.012,355,3.481,393,3.316,503,3.694,517,4.221,519,4.221,543,1.549,546,6.275,547,3.426,548,4.988,549,4.644,550,4.415,551,4.853,552,4.415,553,4.415,554,4.415,555,4.415,556,2.704]],["title/classes/CreatePatientInformationDto.html",[101,0.11,557,2.36]],["body/classes/CreatePatientInformationDto.html",[3,0.242,4,0.242,5,0.188,33,0.015,82,0.242,101,0.168,119,0.014,120,0.014,543,2.066,557,4.226,558,3.607,559,5.094,560,3.607,561,4.571]],["title/classes/CreatePipelineDto.html",[101,0.11,562,2.36]],["body/classes/CreatePipelineDto.html",[3,0.244,4,0.244,5,0.189,33,0.015,82,0.244,101,0.17,119,0.014,120,0.014,543,2.084,562,4.247,563,5.138,564,4.61]],["title/classes/CreateSampleDto.html",[101,0.11,565,2.36]],["body/classes/CreateSampleDto.html",[3,0.244,4,0.244,5,0.189,33,0.015,82,0.244,101,0.17,119,0.014,120,0.014,543,2.084,565,4.247,566,5.138,567,4.61]],["title/classes/CreateUploadDto.html",[101,0.11,568,2.36]],["body/classes/CreateUploadDto.html",[3,0.244,4,0.244,5,0.189,33,0.015,82,0.244,101,0.17,119,0.014,120,0.014,543,2.084,568,4.247,569,5.138,570,4.61]],["title/classes/CreateUserDto.html",[101,0.11,571,2.531]],["body/classes/CreateUserDto.html",[3,0.173,4,0.173,5,0.134,7,0.598,8,2.138,20,1.392,32,1.12,33,0.016,35,1.952,40,1.227,42,1.504,78,0.275,82,0.173,101,0.159,119,0.011,120,0.011,355,3.398,503,3.605,543,1.474,549,4.698,551,4.795,556,2.574,571,3.667,572,6.316,573,3.261,574,4.868,575,4.868,576,4.868,577,3.634,578,4.202,579,3.634,580,4.202,581,4.202,582,3.634,583,3.634,584,5.585]],["title/classes/CreateWorkspaceDto.html",[101,0.11,585,2.531]],["body/classes/CreateWorkspaceDto.html",[3,0.199,4,0.199,5,0.154,7,0.69,8,2.345,20,1.491,32,1.051,33,0.016,35,1.833,40,1.151,42,1.38,52,1.742,78,0.318,82,0.199,101,0.175,119,0.012,120,0.012,543,1.699,549,4.78,551,4.411,556,2.967,585,4.022,586,6.105,587,3.76,588,5.213,589,4.411,590,4.191,591,4.191,592,4.191]],["title/entities/GeneClinicalSynopsis.html",[0,1.352,306,2.735]],["body/entities/GeneClinicalSynopsis.html",[0,1.787,2,1.088,3,0.151,4,0.151,5,0.117,7,0.523,8,1.95,12,2.842,17,1.411,27,2.842,32,1.156,33,0.016,34,3.238,35,1.961,40,1.232,42,1.444,43,4.043,46,1.988,47,3.424,48,2.919,49,3.722,52,1.449,57,3.169,71,1.988,72,2.759,78,0.241,79,2.759,80,2.759,81,1.47,82,0.151,101,0.105,119,0.01,120,0.01,306,3.615,593,3.175,594,5.851,595,5.851,596,5.851,597,5.851,598,5.851,599,3.67,600,3.67,601,3.67,602,3.67,603,3.67,604,3.67,605,3.67,606,3.67]],["title/injectables/JwtAuthGuard.html",[212,0.855,298,2.735]],["body/injectables/JwtAuthGuard.html",[3,0.267,4,0.161,5,0.125,7,0.558,20,1.344,32,0.834,33,0.016,35,1.069,39,2.007,40,1.038,78,0.426,82,0.161,101,0.112,104,1.46,119,0.011,120,0.011,126,1.579,138,1.871,139,1.871,140,1.579,165,0.702,172,1.809,212,1.182,213,1.569,215,1.809,239,1.643,241,1.903,270,2.122,297,2.781,298,3.781,313,2.122,335,3.906,439,4.609,442,6.064,444,4.609,445,5.621,447,3.041,449,2.781,450,2.781,453,4.135,454,3.389,455,3.389,456,3.389,458,3.389,470,3.389,471,3.389,483,2.4,607,5.621,608,3.041,609,2.588,610,5.328,611,5.328,612,3.918,613,3.918,614,3.918,615,5.328,616,3.918,617,6.055,618,3.041,619,3.918]],["title/injectables/JwtStrategy.html",[212,0.855,476,2.531]],["body/injectables/JwtStrategy.html",[3,0.19,4,0.19,5,0.147,7,0.658,17,1.114,20,1.025,32,0.723,33,0.016,40,1.019,78,0.431,82,0.19,101,0.132,104,1.114,119,0.012,120,0.012,126,1.761,130,2.515,138,1.427,139,1.427,140,1.369,151,2.031,165,0.828,212,1.319,213,1.85,215,3.033,360,3.585,464,3.585,476,3.902,483,2.83,503,2.655,609,2.887,618,3.585,620,3.996,621,5.14,622,5.14,623,4.62,624,5.942,625,4.62,626,4.62,627,3.996,628,3.585,629,3.996,630,3.996,631,4.62,632,4.62,633,4.62,634,4.62,635,4.62,636,4.62,637,4.62]],["title/injectables/LocalAuthGuard.html",[212,0.855,403,2.735]],["body/injectables/LocalAuthGuard.html",[3,0.229,4,0.229,5,0.178,33,0.016,78,0.438,82,0.229,101,0.159,119,0.013,120,0.013,165,1,212,1.483,213,2.236,313,3.024,403,4.743,483,3.419,608,4.333,609,3.247,638,4.829,639,6.684]],["title/injectables/LocalStrategy.html",[212,0.855,477,2.531]],["body/injectables/LocalStrategy.html",[3,0.172,4,0.172,5,0.134,7,0.597,20,1.237,32,0.872,33,0.016,40,0.955,42,1.397,78,0.438,82,0.172,101,0.12,104,1.01,119,0.011,120,0.011,126,1.652,130,2.398,138,1.722,139,1.722,140,1.242,165,0.751,172,1.934,182,1.757,212,1.237,213,1.678,215,1.934,231,2.566,239,1.757,241,2.035,270,2.269,335,3.6,355,3.616,401,4.108,402,3.251,448,4.326,450,2.973,477,3.66,483,2.566,503,3.203,527,3.251,609,2.708,618,3.251,621,4.821,622,4.821,627,3.624,628,3.251,630,3.624,640,3.624,641,4.189,642,4.189,643,5.574,644,4.189,645,3.624,646,4.189,647,4.189,648,4.189,649,3.251]],["title/entities/PatientInformation.html",[0,1.352,307,2.531]],["body/entities/PatientInformation.html",[0,1.777,2,1.079,3,0.15,4,0.15,5,0.116,7,0.519,8,1.94,12,2.831,17,1.405,24,4.522,27,2.831,32,1.167,33,0.016,34,3.512,35,1.957,36,2.584,40,1.229,42,1.34,43,3.995,46,1.972,47,3.412,48,2.909,49,3.713,52,1.791,53,3.932,57,3.156,71,1.972,72,2.744,78,0.239,79,2.744,80,2.744,81,1.458,82,0.15,101,0.104,119,0.01,120,0.01,307,3.327,517,3.826,519,3.826,650,3.15,651,5.827,652,5.827,653,3.641,654,3.641,655,3.641,656,3.641,657,3.641,658,3.641,659,3.641,660,3.641]],["title/controllers/PatientInformationController.html",[121,1.242,661,2.735]],["body/controllers/PatientInformationController.html",[3,0.138,4,0.138,5,0.107,7,0.477,17,1.61,20,1.348,32,0.951,33,0.016,35,1.752,40,1.101,42,1.397,78,0.398,82,0.138,101,0.096,104,1.548,119,0.01,120,0.01,121,1.08,123,1.08,125,1.816,126,1.417,127,1.477,128,2.432,129,2.102,132,1.914,133,1.83,136,3.017,138,1.876,139,1.876,140,1.903,142,1.474,143,2.747,152,1.343,153,2.747,155,1.474,157,3.139,159,2.589,160,1.926,161,1.816,162,1.816,165,0.601,168,1.228,170,1.343,172,1.548,173,1.628,174,2.053,177,2.053,185,2.053,187,1.926,319,4.383,557,4.088,558,4.088,560,3.72,661,3.392,662,2.9,663,4.78,664,2.9,665,3.352,666,3.352,667,3.352,668,3.352,669,4.612,670,3.352,671,3.412,672,2.9,673,3.71,674,3.352,675,3.352,676,3.352,677,3.352,678,3.352,679,3.352]],["title/modules/PatientInformationModule.html",[189,1.242,285,2.531]],["body/modules/PatientInformationModule.html",[3,0.202,4,0.202,5,0.157,33,0.016,78,0.443,82,0.202,101,0.14,119,0.012,120,0.012,123,1.991,165,0.88,189,2.178,191,2.16,192,2.16,193,2.387,194,2.387,195,2.16,196,3.284,197,2.387,201,3.002,202,2.387,203,2.269,285,4.9,319,3.226,558,3.009,560,3.785,661,4.798,671,4.57,672,4.25,680,4.25,681,4.25,682,4.913,683,4.913]],["title/injectables/PatientInformationService.html",[212,0.855,671,2.36]],["body/injectables/PatientInformationService.html",[3,0.146,4,0.146,5,0.114,7,0.508,17,1.642,20,1.385,32,0.977,33,0.016,40,1.127,42,1.285,52,2.062,78,0.378,82,0.146,101,0.102,104,1.585,119,0.01,120,0.01,126,1.48,127,1.543,128,2.5,129,2.196,132,2,133,1.912,138,1.929,139,1.929,140,2.073,142,2.196,152,2,155,2.196,165,0.639,168,1.307,170,1.428,212,1.108,213,1.428,237,4.025,238,2.342,239,1.496,268,2.342,307,4.315,319,4.472,557,4.025,558,4.172,560,3.059,664,4.32,669,4.592,671,3.059,673,3.876,684,3.085,685,3.567,686,3.567,687,3.567,688,3.567,689,3.567,690,2.531]],["title/entities/Pipelines.html",[0,1.352,308,2.215]],["body/entities/Pipelines.html",[0,1.924,2,1.212,3,0.168,4,0.168,5,0.13,7,0.583,8,2.1,12,3.007,17,1.493,20,1.373,27,3.007,32,1.135,33,0.016,34,3.388,35,1.882,40,1.182,42,1.293,43,3.736,46,2.216,47,3.582,48,3.054,49,3.846,52,1.56,57,3.352,71,2.216,72,2.971,78,0.268,79,2.971,80,2.971,81,1.638,82,0.168,101,0.117,119,0.011,120,0.011,308,3.153,691,3.538,692,5.354,693,4.091,694,4.091,695,4.091,696,4.091,697,4.091]],["title/controllers/PipelinesController.html",[121,1.242,698,2.735]],["body/controllers/PipelinesController.html",[3,0.144,4,0.144,5,0.111,7,0.498,17,1.632,20,1.373,32,0.969,33,0.016,35,1.78,40,1.118,42,1.411,78,0.406,82,0.144,101,0.1,104,1.573,119,0.01,120,0.01,121,1.126,123,1.126,125,1.893,126,1.459,127,1.521,128,2.478,129,2.165,132,1.972,133,1.885,136,3.087,138,1.912,139,1.912,140,1.933,142,1.537,143,2.829,152,1.4,153,2.829,155,1.537,157,3.233,159,2.667,160,2.009,161,1.893,162,1.893,165,0.626,168,1.28,170,1.4,172,1.614,173,1.698,174,2.141,177,2.141,185,2.141,187,2.009,218,3.087,308,2.009,562,4.145,698,3.494,699,3.023,700,3.023,701,3.495,702,3.495,703,3.495,704,3.495,705,4.662,706,3.495,707,3.023,708,3.821,709,3.495,710,3.495,711,3.495,712,3.495,713,3.495,714,3.495]],["title/modules/PipelinesModule.html",[189,1.242,208,2.215]],["body/modules/PipelinesModule.html",[2,1.407,3,0.195,4,0.195,5,0.151,33,0.016,78,0.474,82,0.195,101,0.135,119,0.012,120,0.012,123,1.529,165,0.85,189,2.143,191,2.087,192,2.087,193,2.305,194,2.305,195,2.087,196,3.232,197,2.937,201,2.937,202,2.305,203,2.191,206,2.907,207,2.087,208,4.25,210,2.727,218,4.07,308,2.727,698,4.29,707,4.105,715,4.105,716,4.105,717,4.746,718,4.746,719,4.746]],["title/injectables/PipelinesService.html",[212,0.855,218,2.087]],["body/injectables/PipelinesService.html",[2,0.904,3,0.125,4,0.125,5,0.097,7,0.435,17,1.651,20,1.434,26,1.482,32,1.012,33,0.016,40,1.145,42,1.136,52,2.069,78,0.424,81,1.222,82,0.125,101,0.087,104,1.559,119,0.009,120,0.009,126,1.324,127,1.38,128,2.328,129,1.964,130,2.474,132,1.788,133,1.71,138,1.997,139,1.997,140,1.979,142,1.964,151,1.964,152,1.788,155,1.964,165,0.547,168,1.118,170,1.222,182,1.873,207,1.342,212,0.991,213,1.222,215,2.062,217,3.817,218,2.419,232,2.004,236,1.653,237,3.561,238,2.004,239,1.28,241,2.169,253,1.869,265,1.869,266,1.869,268,2.004,275,1.869,308,3.555,562,3.789,589,3.817,690,2.165,700,3.863,705,4.384,708,3.466,720,2.639,721,4.466,722,3.051,723,3.051,724,4.466,725,3.051,726,3.051,727,3.051,728,4.466,729,3.051,730,3.051,731,3.051,732,3.051,733,3.051,734,3.051,735,3.051,736,3.051]],["title/entities/Samples.html",[0,1.352,309,2.215]],["body/entities/Samples.html",[0,1.577,2,0.912,3,0.126,4,0.126,5,0.098,7,0.438,8,1.721,10,4.592,11,4.592,12,2.579,13,4.592,16,4.592,17,1.28,20,1.178,26,1.495,27,2.579,29,4.12,32,1.162,33,0.016,34,2.99,35,1.989,40,1.25,42,1.409,43,4.138,46,1.667,47,3.162,48,2.867,49,3.511,52,2.05,57,2.875,61,1.667,71,1.667,72,2.434,78,0.202,79,2.434,80,2.434,81,1.233,82,0.126,87,1.495,101,0.088,102,2.184,104,1.28,109,3.19,119,0.009,120,0.009,309,2.583,737,2.663,738,5.309,739,4.592,740,4.12,741,3.078,742,3.078,743,3.078,744,3.078,745,3.078,746,3.078,747,3.078,748,3.078,749,3.078,750,3.078,751,3.078,752,3.078,753,3.078,754,2.389,755,3.078,756,2.663,757,2.663]],["title/controllers/SamplesController.html",[121,1.242,758,2.735]],["body/controllers/SamplesController.html",[3,0.133,4,0.133,5,0.103,7,0.462,17,1.679,20,1.407,32,0.992,33,0.016,35,1.801,40,1.132,42,1.439,78,0.392,82,0.133,101,0.093,104,1.592,119,0.009,120,0.009,121,1.045,123,1.045,125,1.756,126,1.383,127,1.442,128,2.396,129,2.052,130,2.094,132,1.869,133,1.787,136,2.962,138,1.958,139,1.958,140,1.956,142,1.426,143,2.682,151,1.426,152,1.299,153,2.682,155,1.426,157,3.065,159,2.528,160,1.864,161,1.756,162,1.756,165,0.581,168,1.188,170,1.299,172,1.497,173,1.575,174,1.986,177,1.986,182,1.36,185,1.986,187,1.864,309,1.864,565,4.043,758,3.313,759,2.805,760,4.038,761,2.805,762,3.243,763,3.243,764,3.243,765,2.805,766,4.668,767,3.243,768,3.243,769,4.571,770,3.243,771,3.35,772,2.805,773,3.623,774,3.243,775,3.243,776,3.243,777,3.243,778,3.243,779,3.243,780,3.243,781,3.243]],["title/modules/SamplesModule.html",[189,1.242,286,2.531]],["body/modules/SamplesModule.html",[2,1.407,3,0.195,4,0.195,5,0.151,33,0.016,78,0.474,82,0.195,101,0.135,119,0.012,120,0.012,123,1.948,165,0.85,189,2.143,191,2.087,192,2.087,193,2.305,194,2.305,195,2.087,196,3.232,197,2.305,201,2.937,202,2.305,203,2.191,206,2.907,207,2.087,210,2.727,286,4.856,309,2.727,758,4.721,771,4.53,772,4.105,782,4.105,783,4.105,784,4.746,785,4.746,786,4.746]],["title/injectables/SamplesService.html",[212,0.855,771,2.36]],["body/injectables/SamplesService.html",[2,0.866,3,0.12,4,0.12,5,0.093,7,0.416,17,1.694,20,1.412,26,1.42,32,0.996,33,0.016,40,1.129,42,1.188,52,2.052,78,0.417,81,1.171,82,0.12,87,1.42,88,1.919,101,0.083,104,1.535,119,0.009,120,0.009,126,1.282,127,1.337,128,2.28,129,1.903,130,1.972,132,1.733,133,1.657,138,1.967,139,1.967,140,2.004,142,1.903,151,1.285,152,1.733,155,1.903,165,0.524,168,1.071,170,1.171,182,1.226,207,1.285,212,0.96,213,1.171,215,1.998,217,3.739,231,1.79,232,1.919,236,1.583,237,3.723,238,1.919,239,1.815,241,1.42,253,1.79,265,1.79,266,1.79,268,1.919,270,1.583,275,1.79,309,3.272,565,3.723,589,1.919,690,2.074,740,4.419,760,4.456,761,3.743,765,3.743,769,4.325,771,2.65,773,3.358,787,2.528,788,2.923,789,2.923,790,4.327,791,2.923,792,2.923,793,2.923,794,2.923,795,2.923,796,2.923,797,2.923,798,5.694,799,2.923,800,2.923,801,2.923,802,2.923]],["title/classes/UpdateAnalysisDto.html",[101,0.11,156,2.531]],["body/classes/UpdateAnalysisDto.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,127,1.718,135,3.406,156,4.378,169,4.315,543,1.951,545,4.315,609,3.239,803,4.81,804,6.668,805,3.406,806,3.195,807,3.195]],["title/classes/UpdateAuthDto.html",[101,0.11,808,2.991]],["body/classes/UpdateAuthDto.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,127,1.718,393,3.195,406,3.946,543,1.951,547,4.315,609,3.239,805,3.406,806,3.195,807,3.195,808,5.175,809,4.81,810,6.668]],["title/classes/UpdatePatientInformationDto.html",[101,0.11,669,2.531]],["body/classes/UpdatePatientInformationDto.html",[3,0.226,4,0.226,5,0.175,33,0.016,78,0.434,82,0.226,101,0.157,119,0.013,120,0.013,127,1.698,543,1.927,557,3.365,558,3.365,560,4.055,561,4.264,609,3.216,669,4.347,673,4.264,805,3.365,806,3.158,807,3.158,811,4.753,812,6.62]],["title/classes/UpdatePipelineDto.html",[101,0.11,705,2.531]],["body/classes/UpdatePipelineDto.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,127,1.718,543,1.951,562,3.406,564,4.315,609,3.239,705,4.378,708,4.315,805,3.406,806,3.195,807,3.195,813,4.81,814,6.668]],["title/classes/UpdateSampleDto.html",[101,0.11,769,2.531]],["body/classes/UpdateSampleDto.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,127,1.718,543,1.951,565,3.406,567,4.315,609,3.239,769,4.378,773,4.315,805,3.406,806,3.195,807,3.195,815,4.81,816,6.668]],["title/classes/UpdateUploadDto.html",[101,0.11,817,2.531]],["body/classes/UpdateUploadDto.html",[3,0.228,4,0.228,5,0.177,33,0.016,78,0.437,82,0.228,101,0.159,119,0.013,120,0.013,127,1.718,543,1.951,568,3.406,570,4.315,609,3.239,805,3.406,806,3.195,807,3.195,817,4.378,818,4.81,819,6.668,820,4.315]],["title/classes/UpdateUserDto.html",[101,0.11,821,2.531]],["body/classes/UpdateUserDto.html",[3,0.18,4,0.18,5,0.14,7,0.625,8,2.2,17,1.545,20,1.422,32,1.105,33,0.016,35,1.926,40,1.21,42,1.463,52,1.634,78,0.288,82,0.18,101,0.164,119,0.012,120,0.012,543,1.539,549,3.773,551,4.971,556,2.687,573,3.405,574,4.973,575,4.973,576,4.973,577,3.795,579,3.795,582,3.795,583,3.795,821,3.773,822,6.264,823,4.387,824,4.387,825,5.746]],["title/classes/UpdateWorkspaceDto.html",[101,0.11,826,2.531]],["body/classes/UpdateWorkspaceDto.html",[3,0.199,4,0.199,5,0.154,7,0.69,8,2.345,20,1.491,32,1.051,33,0.016,35,1.833,40,1.151,42,1.38,52,1.742,78,0.318,82,0.199,101,0.175,119,0.012,120,0.012,543,1.699,549,4.78,551,4.411,556,2.967,587,3.76,588,5.213,589,4.411,590,4.191,591,4.191,592,4.191,826,4.022,827,6.105]],["title/entities/Uploads.html",[0,1.352,310,2.36]],["body/entities/Uploads.html",[0,1.535,2,0.879,3,0.122,4,0.122,5,0.095,7,0.423,8,1.675,12,2.524,15,4.495,17,1.253,19,3.412,24,4.033,26,1.441,27,2.524,32,1.163,33,0.016,34,2.938,35,1.995,40,1.253,42,1.355,43,4.152,46,1.607,47,3.106,48,2.824,49,3.466,52,2.113,57,2.814,61,1.607,71,1.607,72,2.369,78,0.194,79,2.369,80,2.369,81,1.188,82,0.122,87,1.441,88,1.948,89,2.105,101,0.085,102,2.105,104,1.383,109,3.688,119,0.009,120,0.009,310,2.679,739,4.495,740,4.033,754,2.302,756,2.566,757,2.566,828,2.566,829,5.196,830,5.196,831,5.196,832,5.196,833,4.495,834,2.967,835,2.967,836,2.967,837,2.967,838,2.967,839,2.967,840,2.967,841,2.967,842,2.967,843,2.967,844,2.967,845,2.967,846,2.967,847,2.967,848,2.967]],["title/controllers/UploadsController.html",[121,1.242,849,2.735]],["body/controllers/UploadsController.html",[3,0.144,4,0.144,5,0.111,7,0.498,17,1.632,20,1.373,32,0.969,33,0.016,35,1.78,40,1.118,42,1.411,78,0.406,82,0.144,101,0.1,104,1.573,119,0.01,120,0.01,121,1.126,123,1.126,125,1.893,126,1.459,127,1.521,128,2.478,129,2.165,132,1.972,133,1.885,136,3.087,138,1.912,139,1.912,140,1.933,142,1.537,143,2.829,152,1.4,153,2.829,155,1.537,157,3.233,159,2.667,160,2.009,161,1.893,162,1.893,165,0.626,168,1.28,170,1.4,172,1.614,173,1.698,174,2.141,177,2.141,185,2.141,187,2.009,310,2.141,568,4.145,817,4.662,820,3.821,849,3.494,850,3.023,851,3.023,852,3.495,853,3.495,854,3.495,855,3.495,856,3.495,857,3.491,858,3.023,859,3.495,860,3.495,861,3.495,862,3.495,863,3.495,864,3.495]],["title/modules/UploadsModule.html",[189,1.242,287,2.531]],["body/modules/UploadsModule.html",[3,0.205,4,0.205,5,0.159,33,0.016,78,0.446,82,0.205,101,0.142,119,0.013,120,0.013,123,2.009,165,0.893,189,2.192,191,2.191,192,2.191,193,2.421,194,2.421,195,2.191,196,3.305,197,2.421,201,3.029,202,2.421,203,2.301,287,4.917,849,4.829,857,4.587,858,4.311,865,4.311,866,4.311,867,4.983,868,4.983]],["title/injectables/UploadsService.html",[212,0.855,857,2.36]],["body/injectables/UploadsService.html",[3,0.152,4,0.152,5,0.118,7,0.527,17,1.661,20,1.407,32,0.993,33,0.016,40,1.142,42,1.302,52,2.079,78,0.385,82,0.152,101,0.106,104,1.606,119,0.01,120,0.01,126,1.518,127,1.583,128,2.54,129,2.252,132,2.052,133,1.961,138,1.96,139,1.96,140,2.094,142,2.252,152,2.052,155,2.252,165,0.663,168,1.355,170,1.482,212,1.137,213,1.482,237,4.079,238,2.429,239,1.551,268,2.429,310,2.266,568,4.079,690,2.625,817,4.638,820,3.976,851,4.431,857,3.138,869,3.2,870,3.699,871,3.699,872,3.699,873,3.699,874,3.699,875,6.343]],["title/entities/Users.html",[0,1.352,311,2.087]],["body/entities/Users.html",[0,1.307,2,0.711,3,0.099,4,0.099,5,0.076,7,0.342,8,1.426,12,2.218,17,1.101,26,2.707,27,2.218,32,1.129,33,0.016,34,3.021,35,1.909,36,1.703,38,3.222,39,1.908,40,1.199,42,1.41,43,4.013,46,1.3,47,3.194,48,2.937,49,3.194,52,1.809,57,2.473,61,2.018,71,1.3,72,2.018,78,0.157,79,2.018,80,2.018,81,0.961,82,0.188,83,3.222,87,1.81,88,1.576,90,1.862,101,0.069,102,3.653,104,1.739,109,4.9,119,0.007,120,0.007,151,1.638,274,2.998,311,2.018,335,2.624,355,2.473,503,2.624,512,3.241,515,4.82,517,2.998,519,2.998,525,3.544,528,3.544,529,3.222,532,3.544,533,3.222,534,3.544,548,3.544,754,3.995,833,3.95,876,1.862,877,4.566,878,3.95,879,2.399,880,2.399,881,2.399,882,2.399,883,2.399,884,2.399,885,2.399,886,2.399,887,2.399,888,2.399,889,2.399,890,2.399,891,2.399,892,3.544,893,3.95,894,2.399,895,3.725,896,2.399,897,3.725,898,3.95,899,2.399,900,2.399]],["title/controllers/UsersController.html",[121,1.242,901,2.735]],["body/controllers/UsersController.html",[3,0.136,4,0.136,5,0.105,7,0.471,17,1.455,20,1.417,32,0.999,33,0.016,35,1.742,40,1.095,42,1.478,78,0.419,82,0.136,101,0.094,104,1.54,119,0.01,120,0.01,121,1.065,123,1.065,125,1.79,126,1.402,127,1.462,128,2.213,129,2.08,132,1.895,133,1.811,136,2.993,138,1.973,139,1.973,140,1.892,142,1.453,143,2.719,147,3.696,152,1.323,153,2.719,159,1.79,160,3.176,161,1.79,162,1.79,164,4.492,165,0.592,168,1.211,170,1.323,172,1.526,173,1.605,174,2.024,177,2.024,187,1.899,311,1.79,407,2.565,498,3.176,571,3.629,821,4.362,901,3.358,902,2.858,903,2.858,904,3.304,905,2.858,906,5.219,907,3.304,908,3.304,909,3.304,910,2.858,911,3.304,912,2.858,913,4.092,914,3.304,915,3.304,916,3.304,917,3.304,918,3.304,919,3.304,920,3.304]],["title/modules/UsersModule.html",[189,1.242,288,2.36]],["body/modules/UsersModule.html",[2,1.351,3,0.187,4,0.187,5,0.145,33,0.016,78,0.468,82,0.187,101,0.13,119,0.012,120,0.012,123,1.898,165,0.817,189,2.103,191,2.005,192,2.005,193,2.215,194,2.215,195,2.005,196,3.171,197,3.171,201,2.862,202,2.215,203,2.105,206,2.793,207,2.005,210,2.62,288,4.561,311,2.469,498,4.476,901,4.633,912,3.944,921,3.944,922,3.944,923,3.944,924,4.559,925,4.559,926,4.559]],["title/injectables/UsersService.html",[212,0.855,498,2.215]],["body/injectables/UsersService.html",[2,0.47,3,0.065,4,0.065,5,0.051,7,0.226,17,1.448,20,1.417,26,0.77,32,0.962,33,0.016,34,0.812,39,0.812,40,1.054,42,1.316,52,1.845,78,0.403,81,0.635,82,0.065,87,1.294,101,0.045,104,1.363,119,0.008,120,0.005,126,0.789,127,0.823,128,1.067,129,1.171,130,2.78,132,1.067,133,1.02,138,1.899,139,1.899,140,1.822,142,1.171,147,3.173,151,2.486,152,1.067,162,1.443,164,1.749,165,0.284,168,0.581,170,0.635,173,0.77,182,2.678,207,0.697,212,0.591,213,0.635,215,1.23,217,2.65,228,1.041,231,0.971,232,1.041,233,1.89,236,1.443,237,0.971,239,2.172,241,3.305,242,1.23,245,1.23,247,2.067,248,1.23,253,0.971,265,0.971,266,0.971,270,2.186,275,0.971,302,1.23,303,1.23,311,1.866,335,2.586,342,1.371,355,1.443,360,1.23,370,2.067,371,2.067,374,2.673,392,2.067,393,2.8,406,1.125,447,1.23,498,1.531,501,1.371,503,3.605,510,1.371,512,1.125,517,1.749,519,1.749,525,1.23,527,2.673,530,2.304,548,2.067,571,3.2,574,1.23,575,1.23,576,1.23,649,2.067,821,3.2,878,2.979,892,1.23,898,1.371,903,2.304,905,2.304,906,4.215,910,2.304,913,2.304,927,1.371,928,2.664,929,2.664,930,5.18,931,1.585,932,5.18,933,1.585,934,2.664,935,2.664,936,1.585,937,1.371,938,1.585,939,1.585,940,2.664,941,1.585,942,1.585,943,1.585,944,2.664,945,1.585,946,1.585,947,1.585,948,1.585,949,1.585,950,1.585,951,1.23,952,1.585,953,1.371,954,1.371,955,1.585,956,1.585,957,2.664,958,1.371,959,1.585,960,3.491,961,2.664,962,2.664,963,2.664,964,2.664,965,2.664,966,2.664,967,2.664,968,2.664,969,2.664,970,2.664,971,2.664,972,1.585,973,1.585,974,1.585,975,1.585,976,2.664,977,2.664,978,1.585,979,1.585,980,1.585,981,1.585,982,1.585,983,1.585,984,3.444,985,1.585,986,1.585,987,1.585,988,1.585,989,1.585,990,1.585,991,1.585,992,1.585,993,1.585,994,1.585,995,1.585,996,1.585,997,1.585,998,1.585,999,1.585,1000,1.585,1001,1.585,1002,1.585,1003,2.664,1004,1.585,1005,1.585,1006,2.664,1007,2.664,1008,1.585,1009,1.371,1010,1.585,1011,1.585,1012,1.585]],["title/entities/Workspaces.html",[0,1.352,312,2.215]],["body/entities/Workspaces.html",[0,1.73,2,1.039,3,0.144,4,0.144,5,0.112,7,0.499,8,1.888,12,2.773,17,1.376,19,3.748,20,1.267,27,2.773,32,1.169,33,0.016,34,3.173,35,1.971,36,2.487,40,1.238,42,1.211,43,3.964,46,1.898,47,3.355,48,2.86,49,3.668,52,2.141,53,3.828,57,3.091,60,4.266,61,2.671,71,1.898,72,2.671,78,0.23,79,2.671,80,2.671,81,1.403,82,0.144,101,0.1,119,0.01,120,0.01,312,2.834,588,4.43,589,3.748,1013,3.031,1014,4.937,1015,3.504,1016,3.504,1017,3.504,1018,3.504,1019,3.504,1020,3.504,1021,3.504,1022,3.504,1023,3.504]],["title/controllers/WorkspacesController.html",[121,1.242,1024,2.735]],["body/controllers/WorkspacesController.html",[3,0.118,4,0.118,5,0.092,7,0.727,17,1.623,20,1.404,32,0.99,33,0.016,35,1.726,40,1.084,42,1.405,52,1.799,78,0.37,82,0.118,101,0.082,104,1.525,119,0.009,120,0.009,121,0.926,123,0.926,125,1.557,126,1.267,127,1.576,128,2.043,130,2.83,132,1.712,133,1.636,136,2.763,138,1.955,139,1.955,140,1.875,143,2.456,146,4.008,147,3.46,150,4.685,151,2.654,152,1.151,153,2.456,155,1.264,159,2.763,160,1.652,161,1.557,162,1.557,163,3.62,164,1.888,165,0.515,168,1.053,170,1.151,172,1.327,173,1.397,179,2.487,180,2.487,182,2.531,184,2.487,185,1.761,187,1.652,312,1.652,585,4.154,826,4.419,1024,3.033,1025,2.487,1026,3.697,1027,2.487,1028,2.875,1029,2.875,1030,2.875,1031,2.487,1032,4.274,1033,2.875,1034,2.487,1035,2.875,1036,2.875,1037,4.274,1038,2.875,1039,2.875,1040,3.125,1041,2.487,1042,3.697,1043,2.875,1044,2.875,1045,2.875,1046,2.875,1047,2.875,1048,2.875,1049,2.875,1050,2.875,1051,2.875]],["title/modules/WorkspacesModule.html",[189,1.242,289,2.531]],["body/modules/WorkspacesModule.html",[2,1.378,3,0.191,4,0.191,5,0.148,33,0.016,78,0.482,82,0.191,101,0.133,119,0.012,120,0.012,123,1.923,165,0.833,189,2.123,191,2.045,192,2.045,193,2.259,194,2.259,195,2.045,196,3.201,197,2.259,201,2.899,202,2.259,203,2.147,206,2.849,207,2.045,208,3.43,209,4.023,210,2.673,289,4.831,312,2.673,1024,4.677,1040,4.506,1041,4.023,1052,4.023,1053,4.023,1054,4.651,1055,4.651,1056,4.651]],["title/injectables/WorkspacesService.html",[212,0.855,1040,2.36]],["body/injectables/WorkspacesService.html",[2,0.55,3,0.076,4,0.076,5,0.059,7,0.548,12,1.474,17,1.648,19,2.529,20,1.37,26,2.558,27,1.474,32,0.87,33,0.016,40,0.953,48,0.857,52,2.078,61,2.409,78,0.38,81,0.743,82,0.076,87,2.558,101,0.053,104,1.34,119,0.006,120,0.006,126,0.9,127,0.938,128,1.216,130,2.67,132,1.216,133,1.162,138,1.717,139,1.717,140,1.561,146,3.737,147,3.676,151,2.315,152,1.216,155,1.335,165,0.333,168,0.68,170,0.743,182,2.705,207,0.816,212,0.674,213,0.743,215,1.401,217,2.921,218,3.01,226,1.317,228,1.993,231,1.137,232,1.219,233,2.154,234,1.605,236,1.644,239,2.208,240,2.625,241,3.356,242,2.989,243,3.331,244,2.625,245,2.989,247,2.989,248,1.44,251,1.605,252,1.605,253,3.005,255,3.331,265,3.225,266,3.225,267,1.605,270,2.657,271,3.848,272,3.848,274,1.219,275,3.005,312,2.557,526,1.605,585,3.221,649,1.44,826,3.808,1009,1.605,1014,2.625,1026,3.331,1027,2.625,1031,2.625,1034,2.625,1040,1.859,1042,2.625,1057,1.605,1058,1.856,1059,1.856,1060,3.035,1061,1.856,1062,3.035,1063,1.856,1064,1.856,1065,1.856,1066,1.856,1067,1.856,1068,1.856,1069,3.035,1070,4.905,1071,3.035,1072,6.909,1073,1.856,1074,1.856,1075,1.856,1076,1.856,1077,1.856,1078,1.856,1079,1.856,1080,1.856,1081,1.856,1082,1.856,1083,3.035,1084,1.856,1085,1.856,1086,1.856,1087,1.856,1088,1.856,1089,1.856,1090,1.856,1091,3.035,1092,1.856,1093,1.856,1094,1.856,1095,3.035,1096,1.856,1097,3.035,1098,1.856]],["title/coverage.html",[1099,4.557]],["body/coverage.html",[0,2.226,1,1.369,5,0.076,6,1.849,32,0.373,33,0.016,61,4.31,101,0.207,119,0.007,120,0.007,121,2.1,122,1.691,124,2.061,135,1.46,156,1.565,166,1.46,195,1.048,212,1.55,214,2.061,218,1.291,239,0.999,276,1.691,277,2.061,278,1.46,298,1.691,306,1.691,307,2.433,308,1.369,309,1.369,310,1.46,311,1.291,312,1.369,313,1.291,319,2.433,363,2.061,368,1.691,369,2.061,393,1.369,401,1.369,403,1.691,405,1.849,436,1.849,438,2.061,449,1.691,476,1.565,477,1.565,494,2.061,498,1.369,509,1.849,544,2.061,545,2.876,546,2.061,547,2.876,557,1.46,558,3.402,559,2.061,560,2.27,561,2.876,562,1.46,563,2.061,564,2.876,565,1.46,566,2.061,567,2.876,568,1.46,569,2.061,570,2.876,571,1.565,572,2.061,573,2.876,585,1.565,586,2.061,587,2.876,593,2.061,607,2.061,608,2.876,620,2.061,638,2.061,640,2.061,650,2.061,661,1.691,662,2.061,669,1.565,671,1.46,684,2.061,691,2.061,698,1.691,699,2.061,705,1.565,720,2.061,737,2.061,758,1.691,759,2.061,769,1.565,771,1.46,787,2.061,803,2.061,808,1.849,809,2.061,811,2.061,813,2.061,815,2.061,817,1.565,818,2.061,821,1.565,822,2.061,826,1.565,827,2.061,828,2.061,849,1.691,850,2.061,857,1.46,869,2.061,876,1.849,901,1.691,902,2.061,927,2.061,951,1.849,1013,2.061,1024,1.691,1025,2.061,1040,1.46,1057,2.061,1099,2.061,1100,2.383,1101,2.383,1102,2.383,1103,7.644,1104,2.383,1105,5.881,1106,6.347,1107,4.546,1108,4.546,1109,3.205,1110,5.555,1111,3.933,1112,2.061,1113,2.061,1114,2.383,1115,5.128,1116,2.383,1117,2.383,1118,2.383,1119,2.383,1120,2.383]],["title/dependencies.html",[192,2.039,1121,2.78]],["body/dependencies.html",[33,0.016,81,1.698,101,0.16,119,0.011,120,0.011,164,2.784,165,0.76,192,1.864,207,1.864,233,3.009,294,3.291,297,3.009,302,3.291,303,3.291,350,3.668,407,3.291,451,3.009,483,2.597,556,2.597,628,4.891,629,3.668,645,3.668,806,2.437,807,2.437,953,3.668,954,3.668,958,3.668,1122,4.24,1123,6.301,1124,4.24,1125,4.24,1126,4.24,1127,4.24,1128,4.24,1129,4.24,1130,4.24,1131,4.24,1132,4.24,1133,4.24,1134,4.24,1135,4.24,1136,4.24,1137,4.24,1138,4.24,1139,4.24,1140,4.24,1141,4.24,1142,4.24,1143,4.24,1144,5.619,1145,5.619,1146,4.24,1147,4.24,1148,4.24,1149,4.24,1150,4.24,1151,4.24,1152,4.24,1153,4.24,1154,4.24,1155,4.24,1156,4.24,1157,4.24,1158,4.24,1159,4.24,1160,4.24,1161,4.24,1162,4.24,1163,4.24,1164,4.24,1165,4.24]],["title/miscellaneous/enumerations.html",[1166,1.968,1167,4.011]],["body/miscellaneous/enumerations.html",[6,3.747,7,0.688,9,3.747,33,0.016,84,5.287,85,4.176,86,4.176,87,3.258,88,4.013,89,3.426,90,4.743,91,4.176,92,4.176,93,4.176,94,4.176,95,4.176,96,4.176,97,4.176,98,4.176,99,4.176,100,3.747,119,0.012,120,0.012,226,5.572,274,3.17,335,2.775,512,4.337,528,3.747,532,3.747,534,3.747,876,3.747,892,4.743,893,4.176,1166,2.957,1167,4.176,1168,4.828,1169,6.112]],["title/miscellaneous/functions.html",[1166,1.968,1170,4.011]],["body/miscellaneous/functions.html",[7,0.857,33,0.014,119,0.014,120,0.014,195,3.246,1113,5.205,1166,3.685,1170,5.205,1171,6.017]],["title/index.html",[7,0.458,1172,3.214,1173,3.214]],["body/index.html",[5,0.191,33,0.015,119,0.012,120,0.012,133,2.295,341,4.05,937,5.184,1174,4.682,1175,4.682,1176,6.969,1177,6.969,1178,6.969,1179,4.682,1180,4.682,1181,4.682,1182,4.682,1183,4.682,1184,4.05,1185,4.05,1186,4.05,1187,4.682,1188,4.682,1189,4.682,1190,4.682,1191,6.61,1192,6.61,1193,5.993,1194,4.682,1195,5.993,1196,5.993,1197,5.993,1198,7.204,1199,4.682,1200,5.993,1201,5.993,1202,5.993,1203,6.61,1204,4.682,1205,4.682,1206,4.682,1207,4.682,1208,4.682,1209,5.993]],["title/modules.html",[191,2.317]],["body/modules.html",[33,0.013,119,0.013,120,0.013,190,3.394,191,2.273,208,2.97,280,3.668,284,3.394,285,3.394,286,3.394,287,3.394,288,3.166,289,3.394,1210,7.796,1211,7.796,1212,7.796,1213,7.796]],["title/overview.html",[1214,4.557]],["body/overview.html",[2,1.023,33,0.016,87,1.677,100,2.679,119,0.01,120,0.01,123,1.112,166,4.243,189,1.112,190,4.425,191,1.518,192,1.518,193,1.677,194,1.677,195,1.518,196,1.677,197,1.677,198,2.986,199,2.986,200,2.986,201,2.371,202,1.677,203,1.594,208,3.536,213,1.382,218,3.066,278,3.467,280,5.479,281,2.986,282,2.986,283,2.986,284,4.891,285,4.263,286,4.263,287,4.263,288,4.243,289,4.263,313,3.333,401,3.253,436,2.679,472,2.986,474,2.986,475,2.986,476,3.717,477,3.717,498,3.981,543,1.211,671,3.467,680,2.986,681,2.986,715,2.986,716,2.986,771,3.467,782,2.986,783,2.986,857,3.467,865,2.986,866,2.986,921,2.986,922,2.986,923,2.986,1040,3.467,1052,2.986,1053,2.986,1214,2.986,1215,4.88,1216,3.452,1217,3.452]],["title/properties.html",[8,1.775,1121,2.78]],["body/properties.html",[8,2.245,14,5.073,33,0.016,119,0.014,120,0.014,692,5.073,1184,5.073,1185,5.073,1186,5.073,1218,5.865,1219,5.865,1220,5.865,1221,5.865]],["title/miscellaneous/variables.html",[1166,1.968,1222,4.011]],["body/miscellaneous/variables.html",[7,0.643,32,0.916,33,0.016,39,2.313,42,1.344,48,3.289,52,1.284,89,4.155,104,1.412,119,0.012,120,0.012,130,2.242,182,2.455,226,5.055,228,2.965,405,4.544,449,4.155,453,3.504,463,5.064,469,5.064,509,4.544,951,4.544,960,5.064,1109,3.905,1111,3.905,1112,5.62,1166,2.765,1222,3.905,1223,6.497,1224,5.855,1225,5.855,1226,4.515,1227,5.855,1228,4.515,1229,4.515]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":61,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1218,"title":{},"body":{"properties.html":{}}}],["0.11.14",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":87,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/Samples.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["1.11.12",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":228,"title":{},"body":{"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["10.0.10",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["10.3.10",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["13",{"_index":1216,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1217,"title":{},"body":{"overview.html":{}}}],["2",{"_index":88,"title":{},"body":{"entities/Analysis.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.2",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":90,"title":{},"body":{"entities/Analysis.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["3.11.3",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["365",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["4",{"_index":92,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["465",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":94,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["5.1.1",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":96,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["6.9.14",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["7",{"_index":98,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.1",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":100,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["8.1.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1215,"title":{},"body":{"overview.html":{}}}],["a45081",{"_index":1187,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["account",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["account/:id",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":237,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["activate",{"_index":1005,"title":{},"body":{"injectables/UsersService.html":{}}}],["activateaccount",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["activateaccount(activatedto",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activateaccount(code",{"_index":935,"title":{},"body":{"injectables/UsersService.html":{}}}],["activatedto",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activationcode",{"_index":1008,"title":{},"body":{"injectables/UsersService.html":{}}}],["active",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["adapter",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["address",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":238,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{}}}],["admin",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["already",{"_index":1073,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["analyses",{"_index":249,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis",{"_index":1,"title":{"entities/Analysis.html":{}},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["analysis.analyzed",{"_index":261,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.controller",{"_index":205,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["analysis.dto",{"_index":169,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"classes/UpdateAnalysisDto.html":{}}}],["analysis.dto.ts",{"_index":545,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/UpdateAnalysisDto.html":{},"coverage.html":{}}}],["analysis.getanalysisstatus(analysis.status",{"_index":264,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.id",{"_index":259,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.name",{"_index":260,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.service",{"_index":167,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{}}}],["analysis.size",{"_index":263,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysis.variants",{"_index":262,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysiscontroller",{"_index":122,"title":{"controllers/AnalysisController.html":{}},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"coverage.html":{}}}],["analysisid",{"_index":106,"title":{},"body":{"entities/Analysis.html":{}}}],["analysismodule",{"_index":190,"title":{"modules/AnalysisModule.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["analysisrepository",{"_index":220,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["analysisservice",{"_index":166,"title":{"injectables/AnalysisService.html":{}},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"coverage.html":{},"overview.html":{}}}],["analysisstatus",{"_index":84,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["analysisstatus.analyzed",{"_index":116,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.analyzing",{"_index":112,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.error",{"_index":117,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.fastq_analyzing",{"_index":113,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.fastq_error",{"_index":118,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.fastq_queuing",{"_index":111,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.importing",{"_index":115,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.queuing",{"_index":110,"title":{},"body":{"entities/Analysis.html":{}}}],["analysisstatus.vep_analyzed",{"_index":114,"title":{},"body":{"entities/Analysis.html":{}}}],["analyzed",{"_index":9,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"miscellaneous/enumerations.html":{}}}],["analyzing",{"_index":86,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["another",{"_index":965,"title":{},"body":{"injectables/UsersService.html":{}}}],["api",{"_index":953,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["app.controller",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":279,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":276,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":280,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":278,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":952,"title":{},"body":{"injectables/UsersService.html":{}}}],["aqp(query",{"_index":975,"title":{},"body":{"injectables/UsersService.html":{}}}],["assembly",{"_index":10,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{}}}],["async",{"_index":130,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{},"injectables/UsersService.html":{}}}],["auth.dto.ts",{"_index":547,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:11",{"_index":552,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:14",{"_index":553,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:17",{"_index":555,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:5",{"_index":550,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:8",{"_index":554,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.guard",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":608,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":614,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:23",{"_index":616,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":613,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/create",{"_index":955,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/passport/auth.guard",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/passport/jwt",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":368,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":313,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authguard('jwt",{"_index":610,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":639,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":284,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1221,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":401,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":182,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":231,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["badrequestexception('id",{"_index":989,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('that",{"_index":271,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["badrequestexception('the",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('there",{"_index":801,"title":{},"body":{"injectables/SamplesService.html":{}}}],["badrequestexception('this",{"_index":1010,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('your",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WorkspacesService.html":{}}}],["badrequestexception(`${email",{"_index":963,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["bcrypt.compare(plainpassword",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(plainpassword",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":159,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["bootstrap",{"_index":195,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1213,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1210,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1209,"title":{},"body":{"index.html":{}}}],["bước",{"_index":1190,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":109,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{}}}],["catch",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ch",{"_index":1193,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1176,"title":{},"body":{"index.html":{}}}],["class",{"_index":101,"title":{"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{}},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":543,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"overview.html":{}}}],["clone",{"_index":1195,"title":{},"body":{"index.html":{}}}],["cluster_analysismodule",{"_index":198,"title":{},"body":{"modules/AnalysisModule.html":{},"overview.html":{}}}],["cluster_analysismodule_exports",{"_index":200,"title":{},"body":{"modules/AnalysisModule.html":{},"overview.html":{}}}],["cluster_analysismodule_providers",{"_index":199,"title":{},"body":{"modules/AnalysisModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_patientinformationmodule",{"_index":680,"title":{},"body":{"modules/PatientInformationModule.html":{},"overview.html":{}}}],["cluster_patientinformationmodule_providers",{"_index":681,"title":{},"body":{"modules/PatientInformationModule.html":{},"overview.html":{}}}],["cluster_pipelinesmodule",{"_index":715,"title":{},"body":{"modules/PipelinesModule.html":{},"overview.html":{}}}],["cluster_pipelinesmodule_providers",{"_index":716,"title":{},"body":{"modules/PipelinesModule.html":{},"overview.html":{}}}],["cluster_samplesmodule",{"_index":782,"title":{},"body":{"modules/SamplesModule.html":{},"overview.html":{}}}],["cluster_samplesmodule_providers",{"_index":783,"title":{},"body":{"modules/SamplesModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":865,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":866,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":921,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":922,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":923,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_workspacesmodule",{"_index":1052,"title":{},"body":{"modules/WorkspacesModule.html":{},"overview.html":{}}}],["cluster_workspacesmodule_providers",{"_index":1053,"title":{},"body":{"modules/WorkspacesModule.html":{},"overview.html":{}}}],["code",{"_index":937,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["codeexpired",{"_index":877,"title":{},"body":{"entities/Users.html":{}}}],["codeid",{"_index":878,"title":{},"body":{"entities/Users.html":{},"injectables/UsersService.html":{}}}],["column",{"_index":43,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["column({default",{"_index":60,"title":{},"body":{"entities/Analysis.html":{},"entities/Workspaces.html":{}}}],["column({nullable",{"_index":65,"title":{},"body":{"entities/Analysis.html":{}}}],["column({type",{"_index":36,"title":{},"body":{"entities/Analysis.html":{},"entities/PatientInformation.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["comparepasswordhelper",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswordhelper(pass",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete_status",{"_index":738,"title":{},"body":{"entities/Samples.html":{}}}],["completed",{"_index":756,"title":{},"body":{"entities/Samples.html":{},"entities/Uploads.html":{}}}],["configmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_access_token_expired",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":489,"title":{},"body":{"modules/AuthModule.html":{}}}],["console.log(error",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":241,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["constructor",{"_index":215,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["constructor(analysisrepository",{"_index":216,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["constructor(authservice",{"_index":641,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(jwtservice",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(pipelinesrepository",{"_index":722,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["constructor(private",{"_index":172,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["constructor(reflector",{"_index":612,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(samplesrepository",{"_index":788,"title":{},"body":{"injectables/SamplesService.html":{}}}],["constructor(usersrepository",{"_index":931,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(workspacesrepository",{"_index":1058,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["contact",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["context.getclass",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{}}}],["control",{"_index":11,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{}}}],["controller",{"_index":121,"title":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{},"coverage.html":{}}}],["controller('analysis",{"_index":171,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["controller('auth",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('patient",{"_index":674,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["controller('pipelines",{"_index":709,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["controller('samples",{"_index":774,"title":{},"body":{"controllers/SamplesController.html":{}}}],["controller('uploads",{"_index":859,"title":{},"body":{"controllers/UploadsController.html":{}}}],["controller('users",{"_index":914,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('workspaces",{"_index":1043,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["controllers",{"_index":123,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["cookie",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{}}}],["coverage",{"_index":1099,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":127,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["create(@body",{"_index":174,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{}}}],["create(createanalysisdto",{"_index":134,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["create(createpatientinformationdto",{"_index":664,"title":{},"body":{"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{}}}],["create(createpipelinedto",{"_index":700,"title":{},"body":{"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{}}}],["create(createsampledto",{"_index":761,"title":{},"body":{"controllers/SamplesController.html":{},"injectables/SamplesService.html":{}}}],["create(createuploaddto",{"_index":851,"title":{},"body":{"controllers/UploadsController.html":{},"injectables/UploadsService.html":{}}}],["create(createuserdto",{"_index":903,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createworkspacedto",{"_index":1027,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["createanalysisdto",{"_index":135,"title":{"classes/CreateAnalysisDto.html":{}},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"classes/CreateAnalysisDto.html":{},"classes/UpdateAnalysisDto.html":{},"coverage.html":{}}}],["createauthdto",{"_index":393,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["created",{"_index":1009,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["createdat",{"_index":12,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{}}}],["createdatecolumn",{"_index":79,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["createdatecolumn({type",{"_index":46,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["createpatientinformationdto",{"_index":557,"title":{"classes/CreatePatientInformationDto.html":{}},"body":{"classes/CreatePatientInformationDto.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["createpipelinedto",{"_index":562,"title":{"classes/CreatePipelineDto.html":{}},"body":{"classes/CreatePipelineDto.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"classes/UpdatePipelineDto.html":{},"coverage.html":{}}}],["createsampledto",{"_index":565,"title":{"classes/CreateSampleDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["createuploaddto",{"_index":568,"title":{"classes/CreateUploadDto.html":{}},"body":{"classes/CreateUploadDto.html":{},"classes/UpdateUploadDto.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":571,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createworkspacedto",{"_index":585,"title":{"classes/CreateWorkspaceDto.html":{}},"body":{"classes/CreateWorkspaceDto.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["createworkspacedto.dashboard",{"_index":1076,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["createworkspacedto.name",{"_index":1071,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["createworkspacedto.pipeline",{"_index":1079,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["current",{"_index":906,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["current_timestamp(6",{"_index":49,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["cài",{"_index":1191,"title":{},"body":{"index.html":{}}}],["các",{"_index":1189,"title":{},"body":{"index.html":{}}}],["cách",{"_index":1205,"title":{},"body":{"index.html":{}}}],["cần",{"_index":1201,"title":{},"body":{"index.html":{}}}],["d",{"_index":1177,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":588,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Workspaces.html":{}}}],["data",{"_index":253,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["data_type",{"_index":13,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{}}}],["database",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":34,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{}}}],["datetime",{"_index":37,"title":{},"body":{"entities/Analysis.html":{}}}],["dayjs",{"_index":233,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"dependencies.html":{}}}],["dayjs().add(30",{"_index":999,"title":{},"body":{"injectables/UsersService.html":{}}}],["dayjs(analysis.createdat).format('dd/mm/yyyy",{"_index":257,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["dayjs(analysis.updatedat).format('dd/mm/yyyy",{"_index":258,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["dayjs(workspace.createdat).format('dd/mm/yyyy",{"_index":1092,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["dayjs(workspace.updatedat).format('dd/mm/yyyy",{"_index":1093,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["db",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":194,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["decorators",{"_index":35,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{}}}],["default",{"_index":48,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":40,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["delete",{"_index":162,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{}}}],["delete(':id",{"_index":153,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["deleted",{"_index":274,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AuthService.html":{},"entities/Users.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1088,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["description",{"_index":14,"title":{},"body":{"entities/Analysis.html":{},"properties.html":{}}}],["dev",{"_index":1204,"title":{},"body":{"index.html":{}}}],["development",{"_index":1194,"title":{},"body":{"index.html":{}}}],["dir",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["disabled",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["dob",{"_index":651,"title":{},"body":{"entities/PatientInformation.html":{}}}],["documentation",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":168,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["dto/update",{"_index":170,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["email",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Analysis.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"coverage.html":{}}}],["enum",{"_index":83,"title":{},"body":{"entities/Analysis.html":{},"entities/Users.html":{}}}],["enumerations",{"_index":1167,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.development",{"_index":1199,"title":{},"body":{"index.html":{}}}],["env.production",{"_index":1208,"title":{},"body":{"index.html":{}}}],["err",{"_index":617,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":89,"title":{},"body":{"entities/Analysis.html":{},"entities/Uploads.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":1011,"title":{},"body":{"injectables/UsersService.html":{}}}],["existed",{"_index":649,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["existed_workspace",{"_index":1069,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["expiresin",{"_index":491,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":82,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{}}}],["exports",{"_index":197,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["express",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":609,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{}}}],["extractjwt",{"_index":626,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":632,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["fastq",{"_index":799,"title":{},"body":{"injectables/SamplesService.html":{}}}],["fastq_analyzing",{"_index":97,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["fastq_error",{"_index":99,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["fastq_pair_index",{"_index":829,"title":{},"body":{"entities/Uploads.html":{}}}],["fastq_queuing",{"_index":95,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"index.html":{}}}],["file_path",{"_index":15,"title":{},"body":{"entities/Analysis.html":{},"entities/Uploads.html":{}}}],["file_size",{"_index":739,"title":{},"body":{"entities/Samples.html":{},"entities/Uploads.html":{}}}],["file_type",{"_index":740,"title":{},"body":{"entities/Samples.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{}}}],["filter",{"_index":973,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter.current",{"_index":976,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":977,"title":{},"body":{"injectables/UsersService.html":{}}}],["find(filter",{"_index":980,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":128,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["findall(id",{"_index":1062,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["findall(query",{"_index":905,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(req",{"_index":1029,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["findbyemail",{"_index":928,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":940,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":129,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":177,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":142,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first_name",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"entities/PatientInformation.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["forgotpassword",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["forgotpassword(email",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["forgotpassword(req",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassworddto",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":990,"title":{},"body":{"injectables/UsersService.html":{}}}],["formatted_date",{"_index":1091,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["found",{"_index":272,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["function",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1170,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gene_name",{"_index":594,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["gene_omim",{"_index":595,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["geneclinicalsynopsis",{"_index":306,"title":{"entities/GeneClinicalSynopsis.html":{}},"body":{"modules/AppModule.html":{},"entities/GeneClinicalSynopsis.html":{},"coverage.html":{}}}],["genotype",{"_index":16,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{}}}],["get(':id",{"_index":143,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["get('getanalysesbyworkspaceid/:id",{"_index":148,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["get('getsamplesbypipeline/:id",{"_index":766,"title":{},"body":{"controllers/SamplesController.html":{}}}],["get('getworkspacename/:id",{"_index":1032,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["get('me",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["getanalysesbyworkspaceid",{"_index":131,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{}}}],["getanalysesbyworkspaceid(req",{"_index":145,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["getanalysesbyworkspaceid(workspace_id",{"_index":224,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["getanalysisstatus(status",{"_index":107,"title":{},"body":{"entities/Analysis.html":{}}}],["gethello",{"_index":364,"title":{},"body":{"injectables/AppService.html":{}}}],["getmongocollectionname(analysisid",{"_index":103,"title":{},"body":{"entities/Analysis.html":{}}}],["getpipelinenamefromid",{"_index":721,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["getpipelinenamefromid(id",{"_index":728,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["getprofile",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["getsamplesbypipeline",{"_index":760,"title":{},"body":{"controllers/SamplesController.html":{},"injectables/SamplesService.html":{}}}],["getsamplesbypipeline(@param('id",{"_index":778,"title":{},"body":{"controllers/SamplesController.html":{}}}],["getsamplesbypipeline(id",{"_index":765,"title":{},"body":{"controllers/SamplesController.html":{},"injectables/SamplesService.html":{}}}],["getsamplestatus(status",{"_index":753,"title":{},"body":{"entities/Samples.html":{}}}],["getting",{"_index":1172,"title":{"index.html":{}},"body":{}}],["getuploadstatus(status",{"_index":847,"title":{},"body":{"entities/Uploads.html":{}}}],["getuserbyid",{"_index":929,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":944,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserrole(role",{"_index":896,"title":{},"body":{"entities/Users.html":{}}}],["getuserrolenumber(role",{"_index":900,"title":{},"body":{"entities/Users.html":{}}}],["getuserstatus(status",{"_index":894,"title":{},"body":{"entities/Users.html":{}}}],["getuserstatusnumber(status",{"_index":899,"title":{},"body":{"entities/Users.html":{}}}],["getworkspacename",{"_index":1026,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["getworkspacename(@param('id",{"_index":1048,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["getworkspacename(id",{"_index":1031,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["gi",{"_index":1183,"title":{},"body":{"index.html":{}}}],["global",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard",{"_index":436,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlebars",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["handlerequest",{"_index":611,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":615,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hashpassword",{"_index":960,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["hashpasswordhelper",{"_index":951,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpasswordhelper(password",{"_index":961,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":366,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["host",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":17,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["identifier",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":633,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoretls",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["igv_local_path",{"_index":18,"title":{},"body":{"entities/Analysis.html":{}}}],["image",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["implements",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":78,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{}}}],["importing",{"_index":93,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["imports",{"_index":210,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{}}}],["incomplete",{"_index":755,"title":{},"body":{"entities/Samples.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index(@param('id",{"_index":1046,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["index(id",{"_index":1034,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{}}}],["information",{"_index":663,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.controller",{"_index":683,"title":{},"body":{"modules/PatientInformationModule.html":{}}}],["information.controller.ts",{"_index":662,"title":{},"body":{"controllers/PatientInformationController.html":{},"coverage.html":{}}}],["information.controller.ts:11",{"_index":665,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.controller.ts:16",{"_index":666,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.controller.ts:21",{"_index":667,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.controller.ts:26",{"_index":670,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.controller.ts:31",{"_index":668,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["information.dto",{"_index":673,"title":{},"body":{"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"classes/UpdatePatientInformationDto.html":{}}}],["information.dto.ts",{"_index":561,"title":{},"body":{"classes/CreatePatientInformationDto.html":{},"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["information.entity.ts",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["information.module",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["information.module.ts",{"_index":682,"title":{},"body":{"modules/PatientInformationModule.html":{}}}],["information.service",{"_index":672,"title":{},"body":{"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{}}}],["information.service.ts",{"_index":684,"title":{},"body":{"injectables/PatientInformationService.html":{},"coverage.html":{}}}],["information.service.ts:11",{"_index":686,"title":{},"body":{"injectables/PatientInformationService.html":{}}}],["information.service.ts:15",{"_index":687,"title":{},"body":{"injectables/PatientInformationService.html":{}}}],["information.service.ts:19",{"_index":689,"title":{},"body":{"injectables/PatientInformationService.html":{}}}],["information.service.ts:23",{"_index":688,"title":{},"body":{"injectables/PatientInformationService.html":{}}}],["information.service.ts:7",{"_index":685,"title":{},"body":{"injectables/PatientInformationService.html":{}}}],["information/dto/create",{"_index":559,"title":{},"body":{"classes/CreatePatientInformationDto.html":{},"coverage.html":{}}}],["information/dto/update",{"_index":811,"title":{},"body":{"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["information/entities/patient",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["information/patient",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"coverage.html":{}}}],["inject",{"_index":493,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":212,"title":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}},"body":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["injectables",{"_index":213,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":232,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["injectrepository(analysis",{"_index":235,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["injectrepository(pipelines",{"_index":732,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["injectrepository(samples",{"_index":797,"title":{},"body":{"injectables/SamplesService.html":{}}}],["injectrepository(users",{"_index":959,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(workspaces",{"_index":1068,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["invalid",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["is_deleted",{"_index":19,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/Uploads.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{}}}],["is_public_key",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iscodevalid",{"_index":1012,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemail",{"_index":584,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemailexist",{"_index":930,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemailexist(email",{"_index":946,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":825,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["ismongoid()@isnotempty",{"_index":823,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isnotempty",{"_index":549,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{}}}],["isnotempty()@isemail",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":551,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{}}}],["ispublic",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isvalidpassword",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":629,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":298,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":631,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":487,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":476,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["khanh",{"_index":1186,"title":{},"body":{"index.html":{},"properties.html":{}}}],["last_name",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"entities/PatientInformation.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":193,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["license",{"_index":1219,"title":{},"body":{"properties.html":{}}}],["limit(pagesize",{"_index":981,"title":{},"body":{"injectables/UsersService.html":{}}}],["list",{"_index":267,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["load",{"_index":734,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["local",{"_index":645,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":403,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":477,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":596,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["logged",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(user",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["mailermodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":932,"title":{},"body":{"injectables/UsersService.html":{}}}],["match",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":120,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":248,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["math.max(1",{"_index":240,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["maxage",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["message",{"_index":266,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["metadata",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":126,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["migrate",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["minutes').todate",{"_index":1000,"title":{},"body":{"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1166,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":189,"title":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/analysis/analysis.module",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/patient",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/pipelines/pipelines.module",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/samples/samples.module",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/uploads/uploads.module",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/users/users.service",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules/workspaces/workspaces.module",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["mongoose.isvalidobjectid(id",{"_index":987,"title":{},"body":{"injectables/UsersService.html":{}}}],["mysql",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mysql2",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["môi",{"_index":1174,"title":{},"body":{"index.html":{}}}],["n",{"_index":1178,"title":{},"body":{"index.html":{}}}],["n/a",{"_index":757,"title":{},"body":{"entities/Samples.html":{},"entities/Uploads.html":{}}}],["name",{"_index":20,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["nestjs",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":165,"title":{},"body":{"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":806,"title":{},"body":{"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":207,"title":{},"body":{"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"dependencies.html":{}}}],["new",{"_index":239,"title":{},"body":{"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["newuser",{"_index":966,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.codeexpired",{"_index":998,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.codeid",{"_index":997,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.email",{"_index":967,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.first_name",{"_index":992,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.last_name",{"_index":993,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.password",{"_index":968,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.phone_number",{"_index":994,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.role",{"_index":995,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.status",{"_index":996,"title":{},"body":{"injectables/UsersService.html":{}}}],["newworkspace",{"_index":1074,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.dashboard",{"_index":1075,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.is_deleted",{"_index":1080,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.name",{"_index":1077,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.number",{"_index":1082,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.pipeline",{"_index":1078,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["newworkspace.user_created_id",{"_index":1081,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["nguyen",{"_index":1184,"title":{},"body":{"index.html":{},"properties.html":{}}}],["node.js",{"_index":1179,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":1198,"title":{},"body":{"index.html":{}}}],["null",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["nullable",{"_index":38,"title":{},"body":{"entities/Analysis.html":{},"entities/Users.html":{}}}],["number",{"_index":52,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AuthService.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["number(id",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["nếu",{"_index":1200,"title":{},"body":{"index.html":{}}}],["offset",{"_index":242,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["onupdate",{"_index":72,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["optional",{"_index":139,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["options",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":1087,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["original_name",{"_index":830,"title":{},"body":{"entities/Uploads.html":{}}}],["out",{"_index":203,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["overview",{"_index":1214,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p_type",{"_index":21,"title":{},"body":{"entities/Analysis.html":{}}}],["package",{"_index":1121,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":146,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["pagebegin",{"_index":243,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["pageend",{"_index":244,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["pagesize",{"_index":147,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["param",{"_index":161,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["param('id",{"_index":181,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["params",{"_index":954,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["parseint(process.env.db_port",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["parser",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":805,"title":{},"body":{"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{}}}],["partialtype(createanalysisdto",{"_index":804,"title":{},"body":{"classes/UpdateAnalysisDto.html":{}}}],["partialtype(createauthdto",{"_index":810,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createpatientinformationdto",{"_index":812,"title":{},"body":{"classes/UpdatePatientInformationDto.html":{}}}],["partialtype(createpipelinedto",{"_index":814,"title":{},"body":{"classes/UpdatePipelineDto.html":{}}}],["partialtype(createsampledto",{"_index":816,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["partialtype(createuploaddto",{"_index":819,"title":{},"body":{"classes/UpdateUploadDto.html":{}}}],["pass",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["passport",{"_index":628,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/auth.guard",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/jwt.strategy",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["passport/local.strategy",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":630,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":621,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":160,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["patch(':id",{"_index":157,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{}}}],["patient",{"_index":560,"title":{},"body":{"classes/CreatePatientInformationDto.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["patientinformation",{"_index":307,"title":{"entities/PatientInformation.html":{}},"body":{"modules/AppModule.html":{},"entities/PatientInformation.html":{},"injectables/PatientInformationService.html":{},"coverage.html":{}}}],["patientinformationcontroller",{"_index":661,"title":{"controllers/PatientInformationController.html":{}},"body":{"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"coverage.html":{}}}],["patientinformationmodule",{"_index":285,"title":{"modules/PatientInformationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientInformationModule.html":{},"modules.html":{},"overview.html":{}}}],["patientinformationservice",{"_index":671,"title":{"injectables/PatientInformationService.html":{}},"body":{"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"coverage.html":{},"overview.html":{}}}],["payload",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":637,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":636,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":893,"title":{},"body":{"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["pheno_name",{"_index":597,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["pheno_omim",{"_index":598,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["phenotype",{"_index":652,"title":{},"body":{"entities/PatientInformation.html":{}}}],["phone",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["phone_number",{"_index":548,"title":{},"body":{"classes/CreateAuthDto.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["pipeline",{"_index":589,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Workspaces.html":{}}}],["pipeline.dto",{"_index":708,"title":{},"body":{"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"classes/UpdatePipelineDto.html":{}}}],["pipeline.dto.ts",{"_index":564,"title":{},"body":{"classes/CreatePipelineDto.html":{},"classes/UpdatePipelineDto.html":{},"coverage.html":{}}}],["pipeline_id",{"_index":22,"title":{},"body":{"entities/Analysis.html":{}}}],["pipeline_name",{"_index":255,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["pipelines",{"_index":308,"title":{"entities/Pipelines.html":{}},"body":{"modules/AppModule.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"coverage.html":{}}}],["pipelines.controller",{"_index":718,"title":{},"body":{"modules/PipelinesModule.html":{}}}],["pipelines.name",{"_index":736,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["pipelines.service",{"_index":707,"title":{},"body":{"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{}}}],["pipelines/pipelines.module",{"_index":209,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/WorkspacesModule.html":{}}}],["pipelines/pipelines.service",{"_index":234,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["pipelinescontroller",{"_index":698,"title":{"controllers/PipelinesController.html":{}},"body":{"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"coverage.html":{}}}],["pipelinesmodule",{"_index":208,"title":{"modules/PipelinesModule.html":{}},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/PipelinesModule.html":{},"modules/WorkspacesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipelinesrepository",{"_index":724,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["pipelinesservice",{"_index":218,"title":{"injectables/PipelinesService.html":{}},"body":{"injectables/AnalysisService.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"overview.html":{}}}],["plainpassword",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":136,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["post('activate",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('forgot",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":125,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["preview",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["primarygeneratedcolumn",{"_index":57,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["private",{"_index":236,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["process.cwd",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_databse",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":635,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.mail_password",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.mail_user",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.mongo_analysis_prefix",{"_index":105,"title":{},"body":{"entities/Analysis.html":{}}}],["process.env.secret",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{}}}],["production",{"_index":1207,"title":{},"body":{"index.html":{}}}],["project_id",{"_index":23,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{}}}],["promise",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["promise.all(analyses.map(async",{"_index":254,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["promise.all(workspaces.map(async",{"_index":1089,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Analysis.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"properties.html":{}}}],["provide",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":196,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["public",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('activate",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('forgot",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('login')@useguards(localauthguard",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":1039,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["put(':id",{"_index":1037,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["query",{"_index":164,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"dependencies.html":{}}}],["query('page",{"_index":179,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/WorkspacesController.html":{}}}],["query('pagesize",{"_index":180,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/WorkspacesController.html":{}}}],["queuing",{"_index":85,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["quoc",{"_index":1185,"title":{},"body":{"index.html":{},"properties.html":{}}}],["readonly",{"_index":173,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{}}}],["reflect",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["register",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(@body",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createauthdto",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":132,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["remove(@param('id",{"_index":187,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/UsersController.html":{},"controllers/WorkspacesController.html":{}}}],["remove(id",{"_index":152,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["removes",{"_index":690,"title":{},"body":{"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{}}}],["reply",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["repository",{"_index":217,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["req",{"_index":150,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"controllers/WorkspacesController.html":{}}}],["req.user",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.id",{"_index":184,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/WorkspacesController.html":{}}}],["request",{"_index":163,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/WorkspacesController.html":{}}}],["request.cookies",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.cookies.access_token",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{}}}],["res",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["res({passthrough",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie('access_token",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('access_token",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.json({status",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":202,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["response",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":119,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":104,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["role",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{}}}],["run",{"_index":1203,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["samesite",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["sample",{"_index":798,"title":{},"body":{"injectables/SamplesService.html":{}}}],["sample.dto",{"_index":773,"title":{},"body":{"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{}}}],["sample.dto.ts",{"_index":567,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["sample_id",{"_index":24,"title":{},"body":{"entities/Analysis.html":{},"entities/PatientInformation.html":{},"entities/Uploads.html":{}}}],["samples",{"_index":309,"title":{"entities/Samples.html":{}},"body":{"modules/AppModule.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"coverage.html":{}}}],["samples.controller",{"_index":785,"title":{},"body":{"modules/SamplesModule.html":{}}}],["samples.service",{"_index":772,"title":{},"body":{"controllers/SamplesController.html":{},"modules/SamplesModule.html":{}}}],["samplescontroller",{"_index":758,"title":{"controllers/SamplesController.html":{}},"body":{"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"coverage.html":{}}}],["samplesmodule",{"_index":286,"title":{"modules/SamplesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SamplesModule.html":{},"modules.html":{},"overview.html":{}}}],["samplesrepository",{"_index":790,"title":{},"body":{"injectables/SamplesService.html":{}}}],["samplesservice",{"_index":771,"title":{"injectables/SamplesService.html":{}},"body":{"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"coverage.html":{},"overview.html":{}}}],["saveduser",{"_index":969,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.email",{"_index":1003,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.first_name",{"_index":1006,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.id",{"_index":971,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.last_name",{"_index":1007,"title":{},"body":{"injectables/UsersService.html":{}}}],["savedworkspace",{"_index":1083,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["secret",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["secretorkey",{"_index":634,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["sendmail",{"_index":1002,"title":{},"body":{"injectables/UsersService.html":{}}}],["setmetadata(is_public_key",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(res",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{}}}],["size",{"_index":25,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{}}}],["skip",{"_index":251,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["skip(offset",{"_index":982,"title":{},"body":{"injectables/UsersService.html":{}}}],["smtp.gmail.com",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":974,"title":{},"body":{"injectables/UsersService.html":{}}}],["sort(sort",{"_index":983,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"modules/AnalysisModule.html":{},"injectables/AnalysisService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAnalysisDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreatePatientInformationDto.html":{},"classes/CreatePipelineDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUploadDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"modules/PipelinesModule.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{}}}],["src/.../analysis.entity.ts",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.entity.ts",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../util.ts",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":277,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":365,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:67",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:47",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:55",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":546,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":809,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/passport/auth.guard.ts",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/auth.guard.ts:10",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/passport/auth.guard.ts:7",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/passport/jwt",{"_index":607,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":620,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:16",{"_index":625,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:7",{"_index":623,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local",{"_index":638,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":640,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:13",{"_index":644,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":642,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/decorators/public.decorator.ts",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/analysis.entity.ts",{"_index":6,"title":{},"body":{"entities/Analysis.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/entities/analysis.entity.ts:17",{"_index":58,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:20",{"_index":63,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:23",{"_index":75,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:26",{"_index":51,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:29",{"_index":45,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:32",{"_index":56,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:35",{"_index":59,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:38",{"_index":68,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:41",{"_index":67,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:44",{"_index":64,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:47",{"_index":41,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:50",{"_index":76,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:53",{"_index":69,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:56",{"_index":70,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:59",{"_index":77,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:62",{"_index":55,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:65",{"_index":54,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:68",{"_index":62,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:71",{"_index":66,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:74",{"_index":74,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:77",{"_index":44,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:80",{"_index":50,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/analysis.entity.ts:83",{"_index":73,"title":{},"body":{"entities/Analysis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts",{"_index":593,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{},"coverage.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:12",{"_index":600,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:15",{"_index":605,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:18",{"_index":604,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:21",{"_index":603,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:24",{"_index":599,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:27",{"_index":606,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:6",{"_index":602,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/gene_clinical_synopsis.entity.ts:9",{"_index":601,"title":{},"body":{"entities/GeneClinicalSynopsis.html":{}}}],["src/entities/patient_information.entity.ts",{"_index":650,"title":{},"body":{"entities/PatientInformation.html":{},"coverage.html":{}}}],["src/entities/patient_information.entity.ts:12",{"_index":657,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:15",{"_index":654,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:18",{"_index":658,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:21",{"_index":659,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:24",{"_index":653,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:27",{"_index":660,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:6",{"_index":656,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/patient_information.entity.ts:9",{"_index":655,"title":{},"body":{"entities/PatientInformation.html":{}}}],["src/entities/pipelines.entity.ts",{"_index":691,"title":{},"body":{"entities/Pipelines.html":{},"coverage.html":{}}}],["src/entities/pipelines.entity.ts:12",{"_index":697,"title":{},"body":{"entities/Pipelines.html":{}}}],["src/entities/pipelines.entity.ts:15",{"_index":693,"title":{},"body":{"entities/Pipelines.html":{}}}],["src/entities/pipelines.entity.ts:18",{"_index":696,"title":{},"body":{"entities/Pipelines.html":{}}}],["src/entities/pipelines.entity.ts:6",{"_index":694,"title":{},"body":{"entities/Pipelines.html":{}}}],["src/entities/pipelines.entity.ts:9",{"_index":695,"title":{},"body":{"entities/Pipelines.html":{}}}],["src/entities/samples.entity.ts",{"_index":737,"title":{},"body":{"entities/Samples.html":{},"coverage.html":{}}}],["src/entities/samples.entity.ts:12",{"_index":752,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:15",{"_index":745,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:18",{"_index":743,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:21",{"_index":748,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:24",{"_index":746,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:27",{"_index":747,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:30",{"_index":742,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:33",{"_index":741,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:36",{"_index":744,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:39",{"_index":751,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:6",{"_index":749,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/samples.entity.ts:9",{"_index":750,"title":{},"body":{"entities/Samples.html":{}}}],["src/entities/uploads.entity.ts",{"_index":828,"title":{},"body":{"entities/Uploads.html":{},"coverage.html":{}}}],["src/entities/uploads.entity.ts:12",{"_index":837,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:15",{"_index":838,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:18",{"_index":844,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:21",{"_index":840,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:24",{"_index":836,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:27",{"_index":846,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:30",{"_index":842,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:33",{"_index":835,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:36",{"_index":845,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:39",{"_index":834,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:42",{"_index":843,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:6",{"_index":839,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/uploads.entity.ts:9",{"_index":841,"title":{},"body":{"entities/Uploads.html":{}}}],["src/entities/users.entity.ts",{"_index":876,"title":{},"body":{"entities/Users.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/entities/users.entity.ts:18",{"_index":884,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:21",{"_index":883,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:24",{"_index":885,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:27",{"_index":882,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:30",{"_index":886,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:33",{"_index":888,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:36",{"_index":889,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:39",{"_index":891,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:42",{"_index":887,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:45",{"_index":880,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:48",{"_index":879,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:51",{"_index":881,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/users.entity.ts:54",{"_index":890,"title":{},"body":{"entities/Users.html":{}}}],["src/entities/workspaces.entity.ts",{"_index":1013,"title":{},"body":{"entities/Workspaces.html":{},"coverage.html":{}}}],["src/entities/workspaces.entity.ts:12",{"_index":1023,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:15",{"_index":1020,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:18",{"_index":1021,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:21",{"_index":1016,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:24",{"_index":1018,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:27",{"_index":1015,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:30",{"_index":1022,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:6",{"_index":1017,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/entities/workspaces.entity.ts:9",{"_index":1019,"title":{},"body":{"entities/Workspaces.html":{}}}],["src/helpers/util.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mail/templates",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/analysis/analysis.controller.ts",{"_index":124,"title":{},"body":{"controllers/AnalysisController.html":{},"coverage.html":{}}}],["src/modules/analysis/analysis.controller.ts:11",{"_index":137,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.controller.ts:16",{"_index":141,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.controller.ts:21",{"_index":144,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.controller.ts:26",{"_index":149,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.controller.ts:36",{"_index":158,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.controller.ts:41",{"_index":154,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["src/modules/analysis/analysis.module.ts",{"_index":204,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["src/modules/analysis/analysis.service.ts",{"_index":214,"title":{},"body":{"injectables/AnalysisService.html":{},"coverage.html":{}}}],["src/modules/analysis/analysis.service.ts:11",{"_index":219,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:18",{"_index":221,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:22",{"_index":222,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:26",{"_index":223,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:30",{"_index":225,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:85",{"_index":230,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/analysis.service.ts:89",{"_index":229,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["src/modules/analysis/dto/create",{"_index":544,"title":{},"body":{"classes/CreateAnalysisDto.html":{},"coverage.html":{}}}],["src/modules/analysis/dto/update",{"_index":803,"title":{},"body":{"classes/UpdateAnalysisDto.html":{},"coverage.html":{}}}],["src/modules/patient",{"_index":558,"title":{},"body":{"classes/CreatePatientInformationDto.html":{},"controllers/PatientInformationController.html":{},"modules/PatientInformationModule.html":{},"injectables/PatientInformationService.html":{},"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["src/modules/pipelines/dto/create",{"_index":563,"title":{},"body":{"classes/CreatePipelineDto.html":{},"coverage.html":{}}}],["src/modules/pipelines/dto/update",{"_index":813,"title":{},"body":{"classes/UpdatePipelineDto.html":{},"coverage.html":{}}}],["src/modules/pipelines/pipelines.controller.ts",{"_index":699,"title":{},"body":{"controllers/PipelinesController.html":{},"coverage.html":{}}}],["src/modules/pipelines/pipelines.controller.ts:11",{"_index":701,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["src/modules/pipelines/pipelines.controller.ts:16",{"_index":702,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["src/modules/pipelines/pipelines.controller.ts:21",{"_index":703,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["src/modules/pipelines/pipelines.controller.ts:26",{"_index":706,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["src/modules/pipelines/pipelines.controller.ts:31",{"_index":704,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["src/modules/pipelines/pipelines.module.ts",{"_index":717,"title":{},"body":{"modules/PipelinesModule.html":{}}}],["src/modules/pipelines/pipelines.service.ts",{"_index":720,"title":{},"body":{"injectables/PipelinesService.html":{},"coverage.html":{}}}],["src/modules/pipelines/pipelines.service.ts:15",{"_index":725,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:19",{"_index":726,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:28",{"_index":727,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:32",{"_index":731,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:36",{"_index":730,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:40",{"_index":729,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/pipelines/pipelines.service.ts:9",{"_index":723,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["src/modules/samples/dto/create",{"_index":566,"title":{},"body":{"classes/CreateSampleDto.html":{},"coverage.html":{}}}],["src/modules/samples/dto/update",{"_index":815,"title":{},"body":{"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["src/modules/samples/samples.controller.ts",{"_index":759,"title":{},"body":{"controllers/SamplesController.html":{},"coverage.html":{}}}],["src/modules/samples/samples.controller.ts:11",{"_index":762,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.controller.ts:16",{"_index":763,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.controller.ts:21",{"_index":764,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.controller.ts:26",{"_index":767,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.controller.ts:31",{"_index":770,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.controller.ts:36",{"_index":768,"title":{},"body":{"controllers/SamplesController.html":{}}}],["src/modules/samples/samples.module.ts",{"_index":784,"title":{},"body":{"modules/SamplesModule.html":{}}}],["src/modules/samples/samples.service.ts",{"_index":787,"title":{},"body":{"injectables/SamplesService.html":{},"coverage.html":{}}}],["src/modules/samples/samples.service.ts:15",{"_index":791,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:19",{"_index":792,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:23",{"_index":793,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:27",{"_index":794,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:48",{"_index":796,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:52",{"_index":795,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/samples/samples.service.ts:9",{"_index":789,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/modules/uploads/dto/create",{"_index":569,"title":{},"body":{"classes/CreateUploadDto.html":{},"coverage.html":{}}}],["src/modules/uploads/dto/update",{"_index":818,"title":{},"body":{"classes/UpdateUploadDto.html":{},"coverage.html":{}}}],["src/modules/uploads/uploads.controller.ts",{"_index":850,"title":{},"body":{"controllers/UploadsController.html":{},"coverage.html":{}}}],["src/modules/uploads/uploads.controller.ts:11",{"_index":852,"title":{},"body":{"controllers/UploadsController.html":{}}}],["src/modules/uploads/uploads.controller.ts:16",{"_index":853,"title":{},"body":{"controllers/UploadsController.html":{}}}],["src/modules/uploads/uploads.controller.ts:21",{"_index":854,"title":{},"body":{"controllers/UploadsController.html":{}}}],["src/modules/uploads/uploads.controller.ts:26",{"_index":856,"title":{},"body":{"controllers/UploadsController.html":{}}}],["src/modules/uploads/uploads.controller.ts:31",{"_index":855,"title":{},"body":{"controllers/UploadsController.html":{}}}],["src/modules/uploads/uploads.module.ts",{"_index":867,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/modules/uploads/uploads.service.ts",{"_index":869,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/modules/uploads/uploads.service.ts:11",{"_index":871,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/modules/uploads/uploads.service.ts:15",{"_index":872,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/modules/uploads/uploads.service.ts:19",{"_index":874,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/modules/uploads/uploads.service.ts:23",{"_index":873,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/modules/uploads/uploads.service.ts:7",{"_index":870,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/modules/users/dto/create",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":822,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":902,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:12",{"_index":904,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:17",{"_index":907,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:26",{"_index":908,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:31",{"_index":911,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:36",{"_index":909,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":924,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":927,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:136",{"_index":936,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:15",{"_index":933,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:158",{"_index":943,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:22",{"_index":938,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:42",{"_index":947,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:47",{"_index":939,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":942,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:75",{"_index":945,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:79",{"_index":941,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:83",{"_index":950,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:87",{"_index":949,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:94",{"_index":948,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/workspaces/dto/create",{"_index":586,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"coverage.html":{}}}],["src/modules/workspaces/dto/update",{"_index":827,"title":{},"body":{"classes/UpdateWorkspaceDto.html":{},"coverage.html":{}}}],["src/modules/workspaces/workspaces.controller.ts",{"_index":1025,"title":{},"body":{"controllers/WorkspacesController.html":{},"coverage.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:11",{"_index":1028,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:19",{"_index":1030,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:28",{"_index":1035,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:33",{"_index":1033,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:38",{"_index":1038,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.controller.ts:43",{"_index":1036,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/modules/workspaces/workspaces.module.ts",{"_index":1054,"title":{},"body":{"modules/WorkspacesModule.html":{}}}],["src/modules/workspaces/workspaces.service.ts",{"_index":1057,"title":{},"body":{"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["src/modules/workspaces/workspaces.service.ts:100",{"_index":1064,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:11",{"_index":1059,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:112",{"_index":1067,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:125",{"_index":1066,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:18",{"_index":1061,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:40",{"_index":1063,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/modules/workspaces/workspaces.service.ts:88",{"_index":1065,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["started",{"_index":1173,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":102,"title":{},"body":{"entities/Analysis.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{}}}],["status",{"_index":26,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["strategy",{"_index":627,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["string",{"_index":42,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1004,"title":{},"body":{"injectables/UsersService.html":{}}}],["success",{"_index":265,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["successfully",{"_index":275,"title":{},"body":{"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["super",{"_index":618,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":619,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1211,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1212,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":754,"title":{},"body":{"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{}}}],["switch(status",{"_index":108,"title":{},"body":{"entities/Analysis.html":{}}}],["synchronize",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1192,"title":{},"body":{"index.html":{}}}],["table",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":252,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{}}}],["template",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["text",{"_index":53,"title":{},"body":{"entities/Analysis.html":{},"entities/PatientInformation.html":{},"entities/Workspaces.html":{}}}],["th",{"_index":1196,"title":{},"body":{"index.html":{}}}],["this.analysisrepository.count",{"_index":246,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.find",{"_index":250,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.findone({where",{"_index":269,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisrepository.update({id",{"_index":273,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.analysisservice.create(createanalysisdto",{"_index":175,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.findall",{"_index":176,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.findone(+id",{"_index":178,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.getanalysesbyworkspaceid(+id",{"_index":183,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.remove(+id",{"_index":188,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.analysisservice.update(+id",{"_index":186,"title":{},"body":{"controllers/AnalysisController.html":{}}}],["this.authservice.activateaccount(activatedto",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(forgotpassworddto.email",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(createauthdto",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":647,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.isemailexist(email",{"_index":962,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(payload",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.mailerservice",{"_index":1001,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.patientinformationservice.create(createpatientinformationdto",{"_index":675,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["this.patientinformationservice.findall",{"_index":676,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["this.patientinformationservice.findone(+id",{"_index":677,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["this.patientinformationservice.remove(+id",{"_index":679,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["this.patientinformationservice.update(+id",{"_index":678,"title":{},"body":{"controllers/PatientInformationController.html":{}}}],["this.pipelinesrepository.find",{"_index":733,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["this.pipelinesrepository.findone({where",{"_index":735,"title":{},"body":{"injectables/PipelinesService.html":{}}}],["this.pipelinesservice.create(createpipelinedto",{"_index":710,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["this.pipelinesservice.findall",{"_index":711,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["this.pipelinesservice.findone(+id",{"_index":712,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["this.pipelinesservice.getpipelinenamefromid(analysis.pipeline_id",{"_index":256,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["this.pipelinesservice.getpipelinenamefromid(workspace.pipeline",{"_index":1090,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.pipelinesservice.remove(+id",{"_index":714,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["this.pipelinesservice.update(+id",{"_index":713,"title":{},"body":{"controllers/PipelinesController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["this.samplesrepository.find({where",{"_index":802,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.samplesservice.create(createsampledto",{"_index":775,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.samplesservice.findall",{"_index":776,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.samplesservice.findone(+id",{"_index":777,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.samplesservice.getsamplesbypipeline(+id",{"_index":779,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.samplesservice.remove(+id",{"_index":781,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.samplesservice.update(+id",{"_index":780,"title":{},"body":{"controllers/SamplesController.html":{}}}],["this.uploadsservice.create(createuploaddto",{"_index":860,"title":{},"body":{"controllers/UploadsController.html":{}}}],["this.uploadsservice.findall",{"_index":861,"title":{},"body":{"controllers/UploadsController.html":{}}}],["this.uploadsservice.findone(+id",{"_index":862,"title":{},"body":{"controllers/UploadsController.html":{}}}],["this.uploadsservice.remove(+id",{"_index":864,"title":{},"body":{"controllers/UploadsController.html":{}}}],["this.uploadsservice.update(+id",{"_index":863,"title":{},"body":{"controllers/UploadsController.html":{}}}],["this.usersrepository",{"_index":979,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.deleteone({id",{"_index":988,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.exists",{"_index":972,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find(filter)).length",{"_index":978,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone({where",{"_index":984,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":970,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update({id",{"_index":985,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.activateaccount(activatedto.code",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":915,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(query",{"_index":916,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(+id",{"_index":917,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.forgotpassword(email",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(createauthdto",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":920,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":919,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.workspacesrepository.count",{"_index":1085,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.workspacesrepository.find",{"_index":1086,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.workspacesrepository.findone({where",{"_index":1070,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.workspacesrepository.save(newworkspace",{"_index":1084,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.workspacesrepository.update({id",{"_index":1097,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["this.workspacesservice.create(createworkspacedto",{"_index":1044,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.findall(req.user.id",{"_index":1045,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.getworkspacename(+id",{"_index":1049,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.index(+id",{"_index":1047,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.remove(+id",{"_index":1051,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.update(+id",{"_index":1050,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["thiết",{"_index":1202,"title":{},"body":{"index.html":{}}}],["throw",{"_index":270,"title":{},"body":{"injectables/AnalysisService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["timestamp",{"_index":47,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["tlu",{"_index":1188,"title":{},"body":{"index.html":{}}}],["token",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["totalitems",{"_index":245,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["totalpages",{"_index":247,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/UsersService.html":{},"injectables/WorkspacesService.html":{}}}],["transformer",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":39,"title":{},"body":{"entities/Analysis.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["trường",{"_index":1175,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"entities/Analysis.html":{},"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"entities/GeneClinicalSynopsis.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/PatientInformation.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"entities/Pipelines.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":81,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"injectables/PipelinesService.html":{},"entities/Samples.html":{},"injectables/SamplesService.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":206,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{}}}],["typeormmodule.forfeature([analysis",{"_index":211,"title":{},"body":{"modules/AnalysisModule.html":{}}}],["typeormmodule.forfeature([pipelines",{"_index":719,"title":{},"body":{"modules/PipelinesModule.html":{}}}],["typeormmodule.forfeature([samples",{"_index":786,"title":{},"body":{"modules/SamplesModule.html":{}}}],["typeormmodule.forfeature([users",{"_index":926,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([workspaces",{"_index":1056,"title":{},"body":{"modules/WorkspacesModule.html":{}}}],["typeormmodule.forroot",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":807,"title":{},"body":{"classes/UpdateAnalysisDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePatientInformationDto.html":{},"classes/UpdatePipelineDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUploadDto.html":{},"dependencies.html":{}}}],["tác",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tại",{"_index":1206,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"access",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception(\"there",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unauthorizedexception('your",{"_index":648,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unknown",{"_index":151,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["unlicensed",{"_index":1220,"title":{},"body":{"properties.html":{}}}],["update",{"_index":133,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"index.html":{}}}],["update(@body",{"_index":918,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":185,"title":{},"body":{"controllers/AnalysisController.html":{},"controllers/PatientInformationController.html":{},"controllers/PipelinesController.html":{},"controllers/SamplesController.html":{},"controllers/UploadsController.html":{},"controllers/WorkspacesController.html":{}}}],["update(id",{"_index":155,"title":{},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["update(updateuserdto",{"_index":910,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateanalysisdto",{"_index":156,"title":{"classes/UpdateAnalysisDto.html":{}},"body":{"controllers/AnalysisController.html":{},"injectables/AnalysisService.html":{},"classes/UpdateAnalysisDto.html":{},"coverage.html":{}}}],["updateauthdto",{"_index":808,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updated",{"_index":1098,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["updatedat",{"_index":27,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{}}}],["updatedatecolumn",{"_index":80,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["updatedatecolumn({type",{"_index":71,"title":{},"body":{"entities/Analysis.html":{},"entities/GeneClinicalSynopsis.html":{},"entities/PatientInformation.html":{},"entities/Pipelines.html":{},"entities/Samples.html":{},"entities/Uploads.html":{},"entities/Users.html":{},"entities/Workspaces.html":{}}}],["updatepatientinformationdto",{"_index":669,"title":{"classes/UpdatePatientInformationDto.html":{}},"body":{"controllers/PatientInformationController.html":{},"injectables/PatientInformationService.html":{},"classes/UpdatePatientInformationDto.html":{},"coverage.html":{}}}],["updatepipelinedto",{"_index":705,"title":{"classes/UpdatePipelineDto.html":{}},"body":{"controllers/PipelinesController.html":{},"injectables/PipelinesService.html":{},"classes/UpdatePipelineDto.html":{},"coverage.html":{}}}],["updates",{"_index":268,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/PatientInformationService.html":{},"injectables/PipelinesService.html":{},"injectables/SamplesService.html":{},"injectables/UploadsService.html":{}}}],["updatesampledto",{"_index":769,"title":{"classes/UpdateSampleDto.html":{}},"body":{"controllers/SamplesController.html":{},"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["updateuploaddto",{"_index":817,"title":{"classes/UpdateUploadDto.html":{}},"body":{"classes/UpdateUploadDto.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":821,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.id",{"_index":986,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateworkspacedto",{"_index":826,"title":{"classes/UpdateWorkspaceDto.html":{}},"body":{"classes/UpdateWorkspaceDto.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["upload",{"_index":875,"title":{},"body":{"injectables/UploadsService.html":{}}}],["upload.dto",{"_index":820,"title":{},"body":{"classes/UpdateUploadDto.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{}}}],["upload.dto.ts",{"_index":570,"title":{},"body":{"classes/CreateUploadDto.html":{},"classes/UpdateUploadDto.html":{},"coverage.html":{}}}],["upload_id",{"_index":28,"title":{},"body":{"entities/Analysis.html":{}}}],["upload_name",{"_index":831,"title":{},"body":{"entities/Uploads.html":{}}}],["upload_status",{"_index":832,"title":{},"body":{"entities/Uploads.html":{}}}],["uploading",{"_index":848,"title":{},"body":{"entities/Uploads.html":{}}}],["uploads",{"_index":310,"title":{"entities/Uploads.html":{}},"body":{"modules/AppModule.html":{},"entities/Uploads.html":{},"controllers/UploadsController.html":{},"injectables/UploadsService.html":{},"coverage.html":{}}}],["uploads.controller",{"_index":868,"title":{},"body":{"modules/UploadsModule.html":{}}}],["uploads.service",{"_index":858,"title":{},"body":{"controllers/UploadsController.html":{},"modules/UploadsModule.html":{}}}],["uploadscontroller",{"_index":849,"title":{"controllers/UploadsController.html":{}},"body":{"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"coverage.html":{}}}],["uploadsmodule",{"_index":287,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":857,"title":{"injectables/UploadsService.html":{}},"body":{"controllers/UploadsController.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["use",{"_index":964,"title":{},"body":{"injectables/UsersService.html":{}}}],["useclass",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto",{"_index":913,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":582,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:15",{"_index":583,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:21",{"_index":580,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":581,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":824,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":579,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.first_name",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.last_name",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.status",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_created",{"_index":833,"title":{},"body":{"entities/Uploads.html":{},"entities/Users.html":{}}}],["user_created_id",{"_index":1014,"title":{},"body":{"entities/Workspaces.html":{},"injectables/WorkspacesService.html":{}}}],["user_id",{"_index":29,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{},"entities/Samples.html":{}}}],["username",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["usernamefield",{"_index":646,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":892,"title":{},"body":{"entities/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":897,"title":{},"body":{"entities/Users.html":{}}}],["userrole.user",{"_index":898,"title":{},"body":{"entities/Users.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":311,"title":{"entities/Users.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":925,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.getuserrole(user.role",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.service",{"_index":912,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":901,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":288,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":934,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":498,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatus",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["userstatus.active",{"_index":895,"title":{},"body":{"entities/Users.html":{}}}],["userstatus.deleted",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{}}}],["userstatus.disabled",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{}}}],["userstatus.pending",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["uuid",{"_index":958,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":957,"title":{},"body":{"injectables/UsersService.html":{}}}],["v",{"_index":1181,"title":{},"body":{"index.html":{}}}],["v20.11.1",{"_index":1180,"title":{},"body":{"index.html":{}}}],["v4",{"_index":956,"title":{},"body":{"injectables/UsersService.html":{}}}],["valid",{"_index":991,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":622,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":643,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":624,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":556,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWorkspaceDto.html":{},"dependencies.html":{}}}],["value",{"_index":226,"title":{},"body":{"injectables/AnalysisService.html":{},"injectables/WorkspacesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1222,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variants",{"_index":30,"title":{},"body":{"entities/Analysis.html":{},"injectables/AnalysisService.html":{}}}],["variants_to_report",{"_index":31,"title":{},"body":{"entities/Analysis.html":{}}}],["vcf",{"_index":800,"title":{},"body":{"injectables/SamplesService.html":{}}}],["vep_analyzed",{"_index":91,"title":{},"body":{"entities/Analysis.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":692,"title":{},"body":{"entities/Pipelines.html":{},"properties.html":{}}}],["viện",{"_index":1197,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":1072,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["workspace.dto",{"_index":1042,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["workspace.dto.ts",{"_index":587,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{},"coverage.html":{}}}],["workspace.dto.ts:11",{"_index":590,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{}}}],["workspace.dto.ts:5",{"_index":591,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{}}}],["workspace.dto.ts:8",{"_index":592,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{}}}],["workspace.id",{"_index":1094,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["workspace.name",{"_index":1095,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["workspace.number",{"_index":1096,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["workspace_id",{"_index":227,"title":{},"body":{"injectables/AnalysisService.html":{}}}],["workspaces",{"_index":312,"title":{"entities/Workspaces.html":{}},"body":{"modules/AppModule.html":{},"entities/Workspaces.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["workspaces.controller",{"_index":1055,"title":{},"body":{"modules/WorkspacesModule.html":{}}}],["workspaces.service",{"_index":1041,"title":{},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{}}}],["workspacescontroller",{"_index":1024,"title":{"controllers/WorkspacesController.html":{}},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"coverage.html":{}}}],["workspacesmodule",{"_index":289,"title":{"modules/WorkspacesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkspacesModule.html":{},"modules.html":{},"overview.html":{}}}],["workspacesrepository",{"_index":1060,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["workspacesservice",{"_index":1040,"title":{"injectables/WorkspacesService.html":{}},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"overview.html":{}}}],["world",{"_index":367,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":201,"title":{},"body":{"modules/AnalysisModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientInformationModule.html":{},"modules/PipelinesModule.html":{},"modules/SamplesModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Analysis.html":{"url":"entities/Analysis.html","title":"entity - Analysis","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Analysis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/analysis.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                analyzed\n                            \n                            \n                                    \n                                assembly\n                            \n                            \n                                    \n                                control\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                data_type\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                file_path\n                            \n                            \n                                    \n                                genotype\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                igv_local_path\n                            \n                            \n                                    \n                                is_deleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                p_type\n                            \n                            \n                                    \n                                pipeline_id\n                            \n                            \n                                    \n                                project_id\n                            \n                            \n                                    \n                                sample_id\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                upload_id\n                            \n                            \n                                    \n                                user_id\n                            \n                            \n                                    \n                                variants\n                            \n                            \n                                    \n                                variants_to_report\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        analyzed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assembly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genotype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        igv_local_path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        p_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pipeline_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sample_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upload_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variants_to_report\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/analysis.entity.ts:59\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\nexport enum AnalysisStatus {\n  QUEUING = 0,\n  ANALYZING = 1, \n  ANALYZED = 2,\n  ERROR = 3,\n  VEP_ANALYZED = 4,\n  IMPORTING = 5,\n  FASTQ_QUEUING = 6,\n  FASTQ_ANALYZING = 7,\n  FASTQ_ERROR = 8,\n}\n@Entity()\nexport class Analysis {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  user_id: number;\n\n  @Column()\n  data_type: string;\n\n  @Column()\n  control: string;\n\n  @Column()\n  genotype: string;\n\n  @Column()\n  igv_local_path: string;\n\n  @Column()\n  sample_id: number;\n\n  @Column()\n  project_id: number;\n\n  @Column()\n  p_type: string;\n\n  @Column({ type: 'datetime', nullable: true })\n  analyzed: Date;\n\n  @Column()\n  variants: number;\n\n  @Column()\n  size: number;\n\n  @Column()\n  status: number;\n\n  @Column({ type: 'text'})\n  variants_to_report: string;\n\n  @Column()\n  file_path: string;\n\n  @Column({ type: 'text'})\n  description: number;\n\n  @Column({default: 0})\n  is_deleted: number;\n\n  @Column({ nullable: true})\n  pipeline_id: number;\n\n  @Column()\n  upload_id: number;\n\n  @Column()\n  assembly: string;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n\n  // static getMongoCollectionName(analysisId: number): {\n\t// \treturn process.env.MONGO_ANALYSIS_PREFIX + analysisId\n\t// }\n\n  static getAnalysisStatus(status): string {\n\t\tswitch(status) {\n\t\t\tcase AnalysisStatus.QUEUING: \n\t\t\tcase AnalysisStatus.FASTQ_QUEUING: \n\t\t\t\treturn 'Queuing'\n\t\t\tcase AnalysisStatus.ANALYZING:\n\t\t\tcase AnalysisStatus.FASTQ_ANALYZING:\n\t\t\tcase AnalysisStatus.VEP_ANALYZED:\n\t\t\tcase AnalysisStatus.IMPORTING:\n\t\t\t\treturn 'Analyzing'\n\t\t\tcase AnalysisStatus.ANALYZED:\n\t\t\t\treturn 'Analyzed'\n\t\t\tcase AnalysisStatus.ERROR:\n\t\t\tcase AnalysisStatus.FASTQ_ERROR:\n\t\t\t\treturn 'Error';\n\t\t\tdefault:\n\t\t\t\treturn 'Queuing'\n\t\t}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnalysisController.html":{"url":"controllers/AnalysisController.html","title":"controller - AnalysisController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnalysisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/analysis/analysis.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                analysis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getAnalysesByWorkspaceId\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAnalysisDto: CreateAnalysisDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAnalysisDto\n                                            \n                                                            CreateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAnalysesByWorkspaceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnalysesByWorkspaceId(req, page: number, pageSize: number, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getAnalysesByWorkspaceId/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAnalysisDto: UpdateAnalysisDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAnalysisDto\n                                            \n                                                            UpdateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Request, Query } from '@nestjs/common';\nimport { AnalysisService } from './analysis.service';\nimport { CreateAnalysisDto } from './dto/create-analysis.dto';\nimport { UpdateAnalysisDto } from './dto/update-analysis.dto';\n\n@Controller('analysis')\nexport class AnalysisController {\n  constructor(private readonly analysisService: AnalysisService) {}\n\n  @Post()\n  create(@Body() createAnalysisDto: CreateAnalysisDto) {\n    return this.analysisService.create(createAnalysisDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.analysisService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.analysisService.findOne(+id);\n  }\n\n  @Get('getAnalysesByWorkspaceId/:id')\n  async getAnalysesByWorkspaceId(\n    @Request() req,\n    @Query('page') page: number,\n    @Query('pageSize') pageSize: number,\n    @Param('id') id: string\n  ) {\n    return await this.analysisService.getAnalysesByWorkspaceId(+id, req.user.id, page, pageSize);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAnalysisDto: UpdateAnalysisDto) {\n    return this.analysisService.update(+id, updateAnalysisDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.analysisService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalysisModule.html":{"url":"modules/AnalysisModule.html","title":"module - AnalysisModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalysisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalysisModule\n\n\n\ncluster_AnalysisModule_providers\n\n\n\ncluster_AnalysisModule_exports\n\n\n\n\nAnalysisService \n\nAnalysisService \n\n\n\nAnalysisModule\n\nAnalysisModule\n\nAnalysisService  -->\n\nAnalysisModule->AnalysisService \n\n\n\n\n\nAnalysisService\n\nAnalysisService\n\nAnalysisModule -->\n\nAnalysisService->AnalysisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/analysis/analysis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalysisService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnalysisController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AnalysisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnalysisService } from './analysis.service';\nimport { AnalysisController } from './analysis.controller';\nimport { Analysis } from '@/entities';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PipelinesModule } from '../pipelines/pipelines.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Analysis]),\n    PipelinesModule\n  ],\n  controllers: [AnalysisController],\n  providers: [AnalysisService],\n  exports: [AnalysisService],\n})\nexport class AnalysisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalysisService.html":{"url":"injectables/AnalysisService.html","title":"injectable - AnalysisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalysisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/analysis/analysis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getAnalysesByWorkspaceId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(analysisRepository: Repository, pipelinesService: PipelinesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/analysis/analysis.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        analysisRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pipelinesService\n                                                  \n                                                        \n                                                                        PipelinesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAnalysisDto: CreateAnalysisDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAnalysisDto\n                                            \n                                                            CreateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAnalysesByWorkspaceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnalysesByWorkspaceId(workspace_id: number, user_id: number, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                workspace_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAnalysisDto: UpdateAnalysisDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/analysis/analysis.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAnalysisDto\n                                            \n                                                            UpdateAnalysisDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateAnalysisDto } from './dto/create-analysis.dto';\nimport { UpdateAnalysisDto } from './dto/update-analysis.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Analysis } from '@/entities';\nimport { Repository } from 'typeorm';\nimport * as dayjs from 'dayjs'\nimport { PipelinesService } from '../pipelines/pipelines.service';\n\n@Injectable()\nexport class AnalysisService {\n\n  constructor(\n    @InjectRepository(Analysis) private analysisRepository: Repository,\n    private pipelinesService: PipelinesService,\n  ) {}\n\n  create(createAnalysisDto: CreateAnalysisDto) {\n    return 'This action adds a new analysis';\n  }\n\n  findAll() {\n    return `This action returns all analysis`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} analysis`;\n  }\n\n  async getAnalysesByWorkspaceId(workspace_id: number, user_id: number, page: number = 1, pageSize: number = 10) {\n    page = Math.max(1, page);\n    pageSize = Math.max(1, pageSize);\n\n    const offset = (page - 1) * pageSize;\n    const pageBegin = offset + 1;\n    const pageEnd = pageBegin + pageSize - 1;\n\n    const totalItems = await this.analysisRepository.count({\n      where: { \n        project_id: workspace_id,\n        user_id: user_id, \n        is_deleted: 0 \n      }\n    });\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    const analyses = await this.analysisRepository.find({\n      where: { \n        project_id: workspace_id,\n        user_id: user_id, \n        is_deleted: 0 \n      },\n      skip: offset,\n      take: pageSize,\n    });\n\n    const data = await Promise.all(analyses.map(async (analysis) => {\n      const pipeline_name = await this.pipelinesService.getPipelineNameFromId(analysis.pipeline_id);\n      const createdAt = dayjs(analysis.createdAt).format('DD/MM/YYYY');\n      const updatedAt = dayjs(analysis.updatedAt).format('DD/MM/YYYY');\n      return {\n        id: analysis.id,\n        name: analysis.name,\n        pipeline_name: pipeline_name,\n        createdAt: createdAt,\n        updatedAt: updatedAt,\n        analyzed: analysis.analyzed,\n        variants: analysis.variants,\n        size: analysis.size,\n        status: Analysis.getAnalysisStatus(analysis.status),\n      }\n    }));\n\n    return {\n      status: 'success',\n      message: 'List all analyses',\n      data,\n      totalItems: totalItems,\n      totalPages: totalPages,\n      pageBegin,\n      pageEnd\n    };\n  }\n\n  update(id: number, updateAnalysisDto: UpdateAnalysisDto) {\n    return `This action updates a #${id} analysis`;\n  }\n\n  async remove(id: number) {\n    const analysis = await this.analysisRepository.findOne({where: {id}});\n    if (!analysis) {\n      throw new BadRequestException('That analysis could not be found')\n    }\n    await this.analysisRepository.update({id}, {is_deleted: 1});\n    return {\n      status: 'success',\n      message: 'Deleted successfully!'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnalysisModule\n\nAnalysisModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalysisModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPatientInformationModule\n\nPatientInformationModule\n\nAppModule -->\n\nPatientInformationModule->AppModule\n\n\n\n\n\nSamplesModule\n\nSamplesModule\n\nAppModule -->\n\nSamplesModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nAppModule -->\n\nWorkspacesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalysisModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            PatientInformationModule\n                        \n                        \n                            SamplesModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            WorkspacesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from '@/app.controller';\nimport { AppService } from '@/app.service';\nimport { UsersModule } from '@/modules/users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from '@/auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/passport/jwt-auth.guard';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Analysis, GeneClinicalSynopsis, PatientInformation, Pipelines, Samples, Uploads, Users, Workspaces } from './entities';\nimport { AuthGuard } from './auth/passport/auth.guard';\nimport { PipelinesModule } from './modules/pipelines/pipelines.module';\nimport { WorkspacesModule } from './modules/workspaces/workspaces.module';\nimport { AnalysisModule } from './modules/analysis/analysis.module';\nimport { PatientInformationModule } from './modules/patient-information/patient-information.module';\nimport { SamplesModule } from './modules/samples/samples.module';\nimport { UploadsModule } from './modules/uploads/uploads.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    ConfigModule.forRoot({ isGlobal: true }),\n    AuthModule,\n    PipelinesModule,\n    WorkspacesModule,\n    AnalysisModule,\n    PatientInformationModule,\n    SamplesModule,\n    UploadsModule,\n    MailerModule.forRootAsync({\n      useFactory: () => ({\n        transport: {\n          host: 'smtp.gmail.com',\n          port: 465,\n          secure: true,\n          // ignoreTLS: true,\n          auth: {\n            user: process.env.MAIL_USER,\n            pass: process.env.MAIL_PASSWORD,\n          },\n        },\n        defaults: {\n          from: '\"No Reply\" ',\n        },\n        preview: true,\n        template: {\n          dir: process.cwd() + '/src/mail/templates/',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        }\n      }),\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT, 10),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABSE,\n      entities: [Analysis, GeneClinicalSynopsis, PatientInformation, Pipelines, Samples, Uploads, Users, Workspaces],\n      synchronize: false,\n    })\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                activateAccount\n                            \n                            \n                                    \n                                    \n                                forgotPassword\n                            \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activateAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateAccount(activateDto: any, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('activate-account/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activateDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(req, forgotPasswordDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('forgot-password')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                forgotPasswordDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { status: string; data: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@UseGuards(LocalAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Get, Body, Param, Res } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './passport/local-auth.guard';\nimport { Public } from '@/decorators';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { Response } from 'express';\n\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n  ) {}\n\n  @Public()\n  @Post('login')\n  @UseGuards(LocalAuthGuard)\n  async signIn(\n    @Res({passthrough: true}) res: Response,\n    @Request() req\n  ) {\n    const {access_token} = await this.authService.login(req.user);\n    res.cookie('access_token', access_token, {\n      maxAge: 365 * 24 * 60 * 60 * 100,\n      sameSite: 'strict',\n      httpOnly: true,\n    }); \n    return {\n      status: \"success\",\n      message: \"Logged in successfully !\",\n    }\n  }\n\n  @Public()\n  @Post('register')\n  register(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.register(createAuthDto);\n  }\n\n  @Public()\n  @Post('activate-account/:id')\n  activateAccount(\n    @Body() activateDto: any,\n    @Param('id') id: string\n  ) {\n    return this.authService.activateAccount(activateDto, Number(id));\n  }\n\n  @Public()\n  @Post('forgot-password')\n  forgotPassword(\n    @Request() req,\n    @Body() forgotPasswordDto: any\n  ) {\n    return this.authService.forgotPassword(forgotPasswordDto.email);\n  }\n\n  @Get('me')\n  getProfile(@Request() req) {\n    return {\n      status: 'success',\n      data: req.user\n    };\n  }\n\n  @Post('logout')\n  logout(@Res() res) {\n\t\tres.clearCookie('access_token', {\n      maxAge: 365 * 24 * 60 * 60 * 100,\n      sameSite: 'strict',\n      httpOnly: true,\n    });\n\t\treturn res.json({status: 'success', message: 'Logged out successfully!'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/passport/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { IS_PUBLIC_KEY } from \"@/decorators\";\nimport { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService, private reflector: Reflector) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    let token;\n    if (request.cookies) {\n      token = request.cookies.access_token\n    }\n    \n    if (!token) {\n      throw new UnauthorizedException(\"There is not access_token in cookies!\");\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.secret,\n      });\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException(\"Access token is invalid\");\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthGuard \n\nAuthGuard \n\nAuthGuard  -->\n\nAuthModule->AuthGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '@/modules/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { AuthGuard } from './passport/auth.guard';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.registerAsync({\n      useFactory: async (configService: ConfigService) => ({\n        global: true,\n        secret: configService.get('JWT_SECRET'),\n        signOptions: {\n            expiresIn: configService.get('JWT_ACCESS_TOKEN_EXPIRED'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    PassportModule\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy, AuthGuard],\n  exports: [JwtModule, AuthGuard],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateAccount(activateDto: any, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activateDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { comparePasswordHelper } from '@/helpers';\nimport { UsersService } from '@/modules/users/users.service';\nimport { BadRequestException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { Users, UserStatus } from '@/entities';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async login(user: any) {\n    const payload = { email: user.email, id: user.id , role: Users.getUserRole(user.role), first_name: user.first_name, last_name: user.last_name};\n    return {\n      access_token: await this.jwtService.sign(payload),\n    };\n  }\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findByEmail(email);\n\n    if (!user) {\n      return null\n    }\n\n    if (user.status == UserStatus.PENDING) {\n      throw new BadRequestException('Your account is not active!')\n    } else if (user.status == UserStatus.DELETED) {\n      throw new BadRequestException('Your account is deleted! Please contact to admin')\n    } else if (user.status == UserStatus.DISABLED) {\n      throw new BadRequestException('Your account is disabled! Please contact to admin')\n    }\n\n    const isValidPassword = await comparePasswordHelper(pass, user.password);\n\n    if (!isValidPassword) {\n      throw new BadRequestException('The password did not match!')\n    }\n\n    return user\n  }\n\n  async register(createAuthDto: CreateAuthDto) {\n    return await this.usersService.register(createAuthDto);\n  }\n\n  async activateAccount(activateDto: any, id: number) {\n    return await this.usersService.activateAccount(activateDto.code, id);\n  }\n\n  async forgotPassword(email: string) {\n    return await this.usersService.forgotPassword(email);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnalysisDto.html":{"url":"classes/CreateAnalysisDto.html","title":"class - CreateAnalysisDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnalysisDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/analysis/dto/create-analysis.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAnalysisDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class CreateAuthDto {\n  @IsNotEmpty()\n  email: string\n\n  @IsNotEmpty()\n  password: string\n\n  @IsOptional()\n  first_name: string\n\n  @IsOptional()\n  last_name: string\n\n  @IsOptional()\n  phone_number: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientInformationDto.html":{"url":"classes/CreatePatientInformationDto.html","title":"class - CreatePatientInformationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientInformationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/patient-information/dto/create-patient-information.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePatientInformationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePipelineDto.html":{"url":"classes/CreatePipelineDto.html","title":"class - CreatePipelineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePipelineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/pipelines/dto/create-pipeline.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePipelineDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSampleDto.html":{"url":"classes/CreateSampleDto.html","title":"class - CreateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/samples/dto/create-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSampleDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUploadDto.html":{"url":"classes/CreateUploadDto.html","title":"class - CreateUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploads/dto/create-upload.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUploadDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n  \n  @IsNotEmpty()\n  password: string;\n\n  @IsOptional()\n  phone: string;\n\n  @IsOptional()\n  address: string;\n\n  @IsOptional()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkspaceDto.html":{"url":"classes/CreateWorkspaceDto.html","title":"class - CreateWorkspaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkspaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workspaces/dto/create-workspace.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dashboard\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                pipeline\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/create-workspace.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/create-workspace.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pipeline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/create-workspace.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class CreateWorkspaceDto {\n  @IsNotEmpty()\n  name: string\n\n  @IsNotEmpty()\n  pipeline: number\n\n  @IsOptional()\n  dashboard: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneClinicalSynopsis.html":{"url":"entities/GeneClinicalSynopsis.html","title":"entity - GeneClinicalSynopsis","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneClinicalSynopsis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/gene_clinical_synopsis.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                gene_name\n                            \n                            \n                                    \n                                gene_omim\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                pheno_name\n                            \n                            \n                                    \n                                pheno_omim\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gene_omim\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pheno_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pheno_omim\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/gene_clinical_synopsis.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class GeneClinicalSynopsis {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  gene_omim: string;\n\n  @Column()\n  gene_name: string;\n\n  @Column()\n  pheno_omim: string;\n\n  @Column()\n  pheno_name: string;\n\n  @Column()\n  location: string;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IS_PUBLIC_KEY } from '@/decorators';\nimport { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException(\"Access token is invalid\");\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { BadRequestException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Your account is not existed!');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PatientInformation.html":{"url":"entities/PatientInformation.html","title":"entity - PatientInformation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PatientInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/patient_information.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dob\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                phenotype\n                            \n                            \n                                    \n                                sample_id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phenotype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sample_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/patient_information.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class PatientInformation {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  first_name: string;\n\n  @Column()\n  last_name: string;\n\n  @Column()\n  dob: Date;\n\n  @Column({ type: 'text'})\n  phenotype: string;\n\n  @Column()\n  sample_id: number;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PatientInformationController.html":{"url":"controllers/PatientInformationController.html","title":"controller - PatientInformationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PatientInformationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/patient-information/patient-information.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                patient-information\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPatientInformationDto: CreatePatientInformationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPatientInformationDto\n                                            \n                                                            CreatePatientInformationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePatientInformationDto: UpdatePatientInformationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePatientInformationDto\n                                            \n                                                            UpdatePatientInformationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PatientInformationService } from './patient-information.service';\nimport { CreatePatientInformationDto } from './dto/create-patient-information.dto';\nimport { UpdatePatientInformationDto } from './dto/update-patient-information.dto';\n\n@Controller('patient-information')\nexport class PatientInformationController {\n  constructor(private readonly patientInformationService: PatientInformationService) {}\n\n  @Post()\n  create(@Body() createPatientInformationDto: CreatePatientInformationDto) {\n    return this.patientInformationService.create(createPatientInformationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.patientInformationService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.patientInformationService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePatientInformationDto: UpdatePatientInformationDto) {\n    return this.patientInformationService.update(+id, updatePatientInformationDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.patientInformationService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PatientInformationModule.html":{"url":"modules/PatientInformationModule.html","title":"module - PatientInformationModule","body":"\n                   \n\n\n\n\n    Modules\n    PatientInformationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PatientInformationModule\n\n\n\ncluster_PatientInformationModule_providers\n\n\n\n\nPatientInformationService\n\nPatientInformationService\n\n\n\nPatientInformationModule\n\nPatientInformationModule\n\nPatientInformationModule -->\n\nPatientInformationService->PatientInformationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/patient-information/patient-information.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PatientInformationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PatientInformationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PatientInformationService } from './patient-information.service';\nimport { PatientInformationController } from './patient-information.controller';\n\n@Module({\n  controllers: [PatientInformationController],\n  providers: [PatientInformationService],\n})\nexport class PatientInformationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientInformationService.html":{"url":"injectables/PatientInformationService.html","title":"injectable - PatientInformationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PatientInformationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/patient-information/patient-information.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPatientInformationDto: CreatePatientInformationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPatientInformationDto\n                                            \n                                                            CreatePatientInformationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePatientInformationDto: UpdatePatientInformationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/patient-information/patient-information.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePatientInformationDto\n                                            \n                                                            UpdatePatientInformationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePatientInformationDto } from './dto/create-patient-information.dto';\nimport { UpdatePatientInformationDto } from './dto/update-patient-information.dto';\n\n@Injectable()\nexport class PatientInformationService {\n  create(createPatientInformationDto: CreatePatientInformationDto) {\n    return 'This action adds a new patientInformation';\n  }\n\n  findAll() {\n    return `This action returns all patientInformation`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} patientInformation`;\n  }\n\n  update(id: number, updatePatientInformationDto: UpdatePatientInformationDto) {\n    return `This action updates a #${id} patientInformation`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} patientInformation`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Pipelines.html":{"url":"entities/Pipelines.html","title":"entity - Pipelines","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Pipelines\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/pipelines.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/pipelines.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/pipelines.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/pipelines.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/pipelines.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/pipelines.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Pipelines {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  version: string;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PipelinesController.html":{"url":"controllers/PipelinesController.html","title":"controller - PipelinesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PipelinesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/pipelines/pipelines.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pipelines\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPipelineDto: CreatePipelineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPipelineDto\n                                            \n                                                            CreatePipelineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePipelineDto: UpdatePipelineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePipelineDto\n                                            \n                                                            UpdatePipelineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PipelinesService } from './pipelines.service';\nimport { CreatePipelineDto } from './dto/create-pipeline.dto';\nimport { UpdatePipelineDto } from './dto/update-pipeline.dto';\n\n@Controller('pipelines')\nexport class PipelinesController {\n  constructor(private readonly pipelinesService: PipelinesService) {}\n\n  @Post()\n  create(@Body() createPipelineDto: CreatePipelineDto) {\n    return this.pipelinesService.create(createPipelineDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.pipelinesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.pipelinesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePipelineDto: UpdatePipelineDto) {\n    return this.pipelinesService.update(+id, updatePipelineDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.pipelinesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipelinesModule.html":{"url":"modules/PipelinesModule.html","title":"module - PipelinesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipelinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipelinesModule\n\n\n\ncluster_PipelinesModule_providers\n\n\n\n\nPipelinesService\n\nPipelinesService\n\n\n\nPipelinesModule\n\nPipelinesModule\n\nPipelinesModule -->\n\nPipelinesService->PipelinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/pipelines/pipelines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PipelinesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PipelinesService } from './pipelines.service';\nimport { PipelinesController } from './pipelines.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Pipelines } from '@/entities';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Pipelines])\n  ],\n  controllers: [PipelinesController],\n  providers: [PipelinesService],\n  exports: [PipelinesService]\n})\nexport class PipelinesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PipelinesService.html":{"url":"injectables/PipelinesService.html","title":"injectable - PipelinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PipelinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/pipelines/pipelines.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getPipelineNameFromId\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pipelinesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/pipelines/pipelines.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pipelinesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPipelineDto: CreatePipelineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPipelineDto\n                                            \n                                                            CreatePipelineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPipelineNameFromId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPipelineNameFromId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePipelineDto: UpdatePipelineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/pipelines/pipelines.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePipelineDto\n                                            \n                                                            UpdatePipelineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePipelineDto } from './dto/create-pipeline.dto';\nimport { UpdatePipelineDto } from './dto/update-pipeline.dto';\nimport { Pipelines } from '@/entities';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class PipelinesService {\n\n  constructor(\n    @InjectRepository(Pipelines) private pipelinesRepository: Repository,\n  ) {}\n\n  create(createPipelineDto: CreatePipelineDto) {\n    return 'This action adds a new pipeline';\n  }\n\n  async findAll() {\n    const pipelines = await this.pipelinesRepository.find({});\n    return {\n      status: 'success',\n      message: 'load all pipelines successfully!',\n      data: pipelines\n    };\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} pipeline`;\n  }\n\n  update(id: number, updatePipelineDto: UpdatePipelineDto) {\n    return `This action updates a #${id} pipeline`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} pipeline`;\n  }\n\n  async getPipelineNameFromId(id: number) {\n    const pipelines = await this.pipelinesRepository.findOne({where: {id}});\n    return pipelines.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Samples.html":{"url":"entities/Samples.html","title":"entity - Samples","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Samples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/samples.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assembly\n                            \n                            \n                                    \n                                complete_status\n                            \n                            \n                                    \n                                control\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                data_type\n                            \n                            \n                                    \n                                file_size\n                            \n                            \n                                    \n                                file_type\n                            \n                            \n                                    \n                                genotype\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assembly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        complete_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        genotype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/samples.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Samples {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  user_id: number;\n\n  @Column()\n  data_type: number;\n\n  @Column()\n  control: string;\n\n  @Column()\n  genotype: string;\n\n  @Column()\n  file_size: number;\n\n  @Column()\n  file_type: string;\n\n  @Column()\n  complete_status: number;\n\n  @Column()\n  assembly: string;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n\n  static getSampleStatus(status: number): string {\n\t\tswitch (status) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Incomplete'\n\t\t\tcase 1:\n\t\t\t\treturn 'Completed'\n\t\t\tdefault:\n\t\t\t\treturn 'N/A'\n\t\t}\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SamplesController.html":{"url":"controllers/SamplesController.html","title":"controller - SamplesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SamplesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/samples/samples.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                samples\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getSamplesByPipeLine\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSampleDto: CreateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSampleDto\n                                            \n                                                            CreateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSamplesByPipeLine\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSamplesByPipeLine(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getSamplesByPipeLine/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSampleDto: UpdateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/samples/samples.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSampleDto\n                                            \n                                                            UpdateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SamplesService } from './samples.service';\nimport { CreateSampleDto } from './dto/create-sample.dto';\nimport { UpdateSampleDto } from './dto/update-sample.dto';\n\n@Controller('samples')\nexport class SamplesController {\n  constructor(private readonly samplesService: SamplesService) {}\n\n  @Post()\n  create(@Body() createSampleDto: CreateSampleDto) {\n    return this.samplesService.create(createSampleDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.samplesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.samplesService.findOne(+id);\n  }\n\n  @Get('getSamplesByPipeLine/:id')\n  async getSamplesByPipeLine(@Param('id') id: string) {\n    return await this.samplesService.getSamplesByPipeLine(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSampleDto: UpdateSampleDto) {\n    return this.samplesService.update(+id, updateSampleDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.samplesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SamplesModule.html":{"url":"modules/SamplesModule.html","title":"module - SamplesModule","body":"\n                   \n\n\n\n\n    Modules\n    SamplesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SamplesModule\n\n\n\ncluster_SamplesModule_providers\n\n\n\n\nSamplesService\n\nSamplesService\n\n\n\nSamplesModule\n\nSamplesModule\n\nSamplesModule -->\n\nSamplesService->SamplesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/samples/samples.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SamplesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SamplesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SamplesService } from './samples.service';\nimport { SamplesController } from './samples.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Samples } from '@/entities';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Samples])\n  ],\n  controllers: [SamplesController],\n  providers: [SamplesService],\n})\nexport class SamplesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SamplesService.html":{"url":"injectables/SamplesService.html","title":"injectable - SamplesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SamplesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/samples/samples.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getSamplesByPipeLine\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(samplesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/samples/samples.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        samplesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createSampleDto: CreateSampleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSampleDto\n                                            \n                                                            CreateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSamplesByPipeLine\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSamplesByPipeLine(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSampleDto: UpdateSampleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/samples/samples.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSampleDto\n                                            \n                                                            UpdateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSampleDto } from './dto/create-sample.dto';\nimport { UpdateSampleDto } from './dto/update-sample.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Samples } from '@/entities';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class SamplesService {\n\n  constructor(\n    @InjectRepository(Samples) private samplesRepository: Repository,\n  ) {}\n\n  create(createSampleDto: CreateSampleDto) {\n    return 'This action adds a new sample';\n  }\n\n  findAll() {\n    return `This action returns all samples`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} sample`;\n  }\n\n  async getSamplesByPipeLine(id: number) {\n    let file_type;\n    if (id == 1) {\n      file_type = 'fastq'\n    } else if (id == 2) {\n      file_type = 'vcf'\n    } else {\n      throw new BadRequestException('There is not a pipeline has that id!')\n    }\n\n    const samples = await this.samplesRepository.find({where: {\n      file_type\n    }})\n\n    return {\n      status: 'success',\n      message: 'getSamplesByPipeLine successfully!',\n      data: samples\n    }\n  }\n\n  update(id: number, updateSampleDto: UpdateSampleDto) {\n    return `This action updates a #${id} sample`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} sample`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnalysisDto.html":{"url":"classes/UpdateAnalysisDto.html","title":"class - UpdateAnalysisDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnalysisDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/analysis/dto/update-analysis.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAnalysisDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAnalysisDto } from './create-analysis.dto';\n\nexport class UpdateAnalysisDto extends PartialType(CreateAnalysisDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatientInformationDto.html":{"url":"classes/UpdatePatientInformationDto.html","title":"class - UpdatePatientInformationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatientInformationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/patient-information/dto/update-patient-information.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePatientInformationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePatientInformationDto } from './create-patient-information.dto';\n\nexport class UpdatePatientInformationDto extends PartialType(CreatePatientInformationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePipelineDto.html":{"url":"classes/UpdatePipelineDto.html","title":"class - UpdatePipelineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePipelineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/pipelines/dto/update-pipeline.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePipelineDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePipelineDto } from './create-pipeline.dto';\n\nexport class UpdatePipelineDto extends PartialType(CreatePipelineDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSampleDto.html":{"url":"classes/UpdateSampleDto.html","title":"class - UpdateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/samples/dto/update-sample.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateSampleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSampleDto } from './create-sample.dto';\n\nexport class UpdateSampleDto extends PartialType(CreateSampleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUploadDto.html":{"url":"classes/UpdateUploadDto.html","title":"class - UpdateUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploads/dto/update-upload.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUploadDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUploadDto } from './create-upload.dto';\n\nexport class UpdateUploadDto extends PartialType(CreateUploadDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class UpdateUserDto {\n  @IsMongoId()\n  @IsNotEmpty()\n  id: number;\n\n  @IsOptional()\n  name: string;\n\n  @IsOptional()\n  phone: string;\n\n  @IsOptional()\n  address: string;\n\n  @IsOptional()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkspaceDto.html":{"url":"classes/UpdateWorkspaceDto.html","title":"class - UpdateWorkspaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkspaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workspaces/dto/update-workspace.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dashboard\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                pipeline\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/update-workspace.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/update-workspace.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pipeline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/workspaces/dto/update-workspace.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class UpdateWorkspaceDto {\n  @IsNotEmpty()\n  name: string\n\n  @IsNotEmpty()\n  pipeline: number\n\n  @IsOptional()\n  dashboard: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Uploads.html":{"url":"entities/Uploads.html","title":"entity - Uploads","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Uploads\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/uploads.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                fastq_pair_index\n                            \n                            \n                                    \n                                file_path\n                            \n                            \n                                    \n                                file_size\n                            \n                            \n                                    \n                                file_type\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                is_deleted\n                            \n                            \n                                    \n                                original_name\n                            \n                            \n                                    \n                                sample_id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                upload_name\n                            \n                            \n                                    \n                                upload_status\n                            \n                            \n                                    \n                                user_created\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fastq_pair_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        original_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sample_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upload_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        upload_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/uploads.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Uploads {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  original_name: string;\n\n  @Column()\n  file_size: number;\n\n  @Column()\n  file_type: string;\n\n  @Column()\n  upload_name: string;\n\n  @Column()\n  is_deleted: number;\n\n  @Column()\n  file_path: string;\n\n  @Column()\n  user_created: number;\n\n  @Column()\n  sample_id: number;\n\n  @Column()\n  fastq_pair_index: number;\n\n  @Column()\n  upload_status: number;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n\n  static getUploadStatus(status: number): string {\n\t\tswitch (status) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Uploading';\n\t\t\tcase 1:\n\t\t\t\treturn 'Completed';\n\t\t\tcase 2:\n\t\t\t\treturn 'Error';\n\t\t\tdefault:\n\t\t\t\treturn 'N/A'\n\t\t}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploadsController.html":{"url":"controllers/UploadsController.html","title":"controller - UploadsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploadsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploads/uploads.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                uploads\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUploadDto: CreateUploadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUploadDto\n                                            \n                                                            CreateUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUploadDto: UpdateUploadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUploadDto\n                                            \n                                                            UpdateUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UploadsService } from './uploads.service';\nimport { CreateUploadDto } from './dto/create-upload.dto';\nimport { UpdateUploadDto } from './dto/update-upload.dto';\n\n@Controller('uploads')\nexport class UploadsController {\n  constructor(private readonly uploadsService: UploadsService) {}\n\n  @Post()\n  create(@Body() createUploadDto: CreateUploadDto) {\n    return this.uploadsService.create(createUploadDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.uploadsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.uploadsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUploadDto: UpdateUploadDto) {\n    return this.uploadsService.update(+id, updateUploadDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.uploadsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_providers\n\n\n\n\nUploadsService\n\nUploadsService\n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploadsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './uploads.service';\nimport { UploadsController } from './uploads.controller';\n\n@Module({\n  controllers: [UploadsController],\n  providers: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/uploads/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUploadDto: CreateUploadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUploadDto\n                                            \n                                                            CreateUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUploadDto: UpdateUploadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/uploads/uploads.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUploadDto\n                                            \n                                                            UpdateUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUploadDto } from './dto/create-upload.dto';\nimport { UpdateUploadDto } from './dto/update-upload.dto';\n\n@Injectable()\nexport class UploadsService {\n  create(createUploadDto: CreateUploadDto) {\n    return 'This action adds a new upload';\n  }\n\n  findAll() {\n    return `This action returns all uploads`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} upload`;\n  }\n\n  update(id: number, updateUploadDto: UpdateUploadDto) {\n    return `This action updates a #${id} upload`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} upload`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Users.html":{"url":"entities/Users.html","title":"entity - Users","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/users.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeExpired\n                            \n                            \n                                    \n                                codeId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone_number\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user_created\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeExpired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/users.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\nexport enum UserRole {\n  ADMIN = 0,\n  USER = 1,\n}\n\nexport enum UserStatus {\n  ACTIVE = 0,\n  DELETED = 1,\n  DISABLED = 2,\n  PENDING = 3,\n}\n\n@Entity()\nexport class Users {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  first_name: string;\n\n  @Column()\n  last_name: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  role: number;\n\n  @Column()\n  status: number;\n\n  @Column()\n  user_created: number;\n\n  @Column()\n  phone_number: string;\n\n  @Column()\n  codeId: string;\n\n  @Column({ type: 'timestamp', nullable: true })\n  codeExpired: Date;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n\n  static getUserStatus(status: UserStatus): string {\n    switch (status) {\n      case UserStatus.ACTIVE:\n        return 'Active';\n      case UserStatus.DELETED:\n        return 'Deleted';\n      case UserStatus.DISABLED:\n        return 'Disabled';\n      case UserStatus.PENDING:\n        return 'Pending';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  static getUserRole(role: UserRole): string {\n    switch (role) {\n      case UserRole.ADMIN:\n        return 'Admin';\n      case UserRole.USER:\n        return 'User';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  static getUserStatusNumber(status: string): UserStatus {\n    switch (status) {\n      case 'Active':\n        return UserStatus.ACTIVE;\n      case 'Deleted':\n        return UserStatus.DELETED;\n      case 'Disabled':\n        return UserStatus.DISABLED;\n      case 'Pending':\n        return UserStatus.PENDING;\n      default:\n        return UserStatus.PENDING;\n    }\n  }\n\n  static getUserRoleNumber(role: string): UserRole {\n    switch (role) {\n      case 'Admin':\n        return UserRole.ADMIN;\n      case 'User':\n        return UserRole.USER;\n      default:\n        return UserRole.USER;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string, current: string, pageSize: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { query } from 'express';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: any) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll(\n    @Query() query: string,\n    @Query() current: string,\n    @Query() pageSize: string,\n  ) {\n    return this.usersService.findAll(query, +current, +pageSize);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch()\n  update(@Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Users } from '@/entities';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Users])\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateAccount\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                isEMailExist\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateAccount(code: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string, current: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isEMailExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEMailExist(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { hashPasswordHelper } from '@/helpers';\nimport aqp from 'api-query-params';\nimport { CreateAuthDto } from '@/auth/dto/create-auth.dto';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as dayjs from 'dayjs';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { UserRole, Users, UserStatus } from '@/entities';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    @InjectRepository(Users) private usersRepository: Repository,\n    private readonly mailerService: MailerService\n  ) {}\n\n  async create(createUserDto: CreateUserDto) {\n    const {name, email, password, phone, address, image} = createUserDto;\n\n    const hashPassword = await hashPasswordHelper(password);\n\n    const isEmailExist = await this.isEMailExist(email);\n    if (isEmailExist) {\n      throw new BadRequestException(`${email} has been existed! Please use another email`)\n    }\n\n    const newUser = new Users();\n    newUser.email = email;\n    newUser.password = hashPassword;\n    const savedUser = await this.usersRepository.save(newUser);\n\n    return {\n      id: savedUser.id\n    };\n  }\n\n  async isEMailExist (email: string) {\n    const user = await this.usersRepository.exists({ where: { email: email } });\n    return user ? true : false;\n  }\n\n  async findAll(query: string, current: number, pageSize: number) {\n    const {filter, sort} = aqp(query);\n    if (filter.current) delete filter.current;\n    if (filter.pageSize) delete filter.pageSize;\n    if (!current) current = 1;\n    if (!pageSize) pageSize = 10;\n\n    const totalItems = (await this.usersRepository.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    const offset = (current - 1) * pageSize;\n\n    const results = await this.usersRepository\n    .find(filter)\n    // .limit(pageSize)\n    // .skip(offset)\n    // .sort(sort as any)\n\n    return {\n      results,\n      totalPages\n    };\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  async getUserById(id : number) {\n    return await this.usersRepository.findOne({where: { id }});\n  }\n\n  async findByEmail(email: string) {\n    return await this.usersRepository.findOne({where: { email }});\n  }\n\n  async update(updateUserDto: UpdateUserDto) {\n    return await this.usersRepository.update({id: updateUserDto.id}, {...updateUserDto});\n  }\n\n  async remove(id: string) {\n    // if (mongoose.isValidObjectId(id)) {\n    //   return await this.usersRepository.deleteOne({id});\n    // }\n    throw new BadRequestException('id format is not valid')\n  }\n\n  async register(createAuthDto: CreateAuthDto) {\n    const {email, password, first_name, last_name, phone_number} = createAuthDto;\n\n    const isEmailExist = await this.isEMailExist(email);\n    if (isEmailExist) {\n      throw new BadRequestException(`${email} has been existed! Please use another email!`)\n    }\n\n    const hashPassword = await hashPasswordHelper(password);\n    const codeId = uuidv4();\n    const newUser = new Users();\n    newUser.email = email;\n    newUser.password = hashPassword;\n    newUser.first_name = first_name;\n    newUser.last_name = last_name;\n    newUser.phone_number = phone_number;\n    newUser.role = UserRole.USER;\n    newUser.status = UserStatus.PENDING;\n    newUser.codeId = codeId;\n    newUser.codeExpired = dayjs().add(30, 'minutes').toDate();\n    const savedUser = await this.usersRepository.save(newUser);\n\n    this.mailerService\n    .sendMail({\n      to: savedUser.email,\n      subject: 'Activate your account',\n      template: \"register\",\n      context: {\n        name: savedUser.first_name && savedUser.last_name ? `${savedUser.first_name} ${savedUser.last_name}` : savedUser.email,\n        activationCode: codeId\n      }\n    })\n\n    return {\n      status: 'success',\n      message: 'Created an account successfully!',\n      data: {\n        id: savedUser.id\n      }\n    };\n  }\n\n  async activateAccount(code: string, id: number) {\n    const user = await this.usersRepository.findOne({where: {id}});\n    if (!user) {\n      throw new BadRequestException('This account is not exist!') \n    }\n\n    const isCodeValid = new Date() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Workspaces.html":{"url":"entities/Workspaces.html","title":"entity - Workspaces","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Workspaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/workspaces.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dashboard\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                is_deleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                pipeline\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user_created_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pipeline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_created_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/workspaces.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Workspaces {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  user_created_id: number;\n\n  @Column()\n  number: number;\n\n  @Column()\n  pipeline: number;\n\n  @Column({ type: 'text'})\n  dashboard: string;\n\n  @Column({default: 0})\n  is_deleted: number;\n\n  @CreateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\", onUpdate: \"CURRENT_TIMESTAMP(6)\" })\n  updatedAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkspacesController.html":{"url":"controllers/WorkspacesController.html","title":"controller - WorkspacesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkspacesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workspaces/workspaces.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workspaces\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                getWorkspaceName\n                            \n                            \n                                    \n                                    Async\n                                index\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWorkspaceDto: CreateWorkspaceDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWorkspaceDto\n                                            \n                                                            CreateWorkspaceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getWorkspaceName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorkspaceName(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getWorkspaceName/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        index\n                        \n                    \n                \n            \n            \n                \n                        \n                    index(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateWorkspaceDto: UpdateWorkspaceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWorkspaceDto\n                                            \n                                                            UpdateWorkspaceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Request, Query, Put } from '@nestjs/common';\nimport { WorkspacesService } from './workspaces.service';\nimport { CreateWorkspaceDto } from './dto/create-workspace.dto';\nimport { UpdateWorkspaceDto } from './dto/update-workspace.dto';\n\n@Controller('workspaces')\nexport class WorkspacesController {\n  constructor(private readonly workspacesService: WorkspacesService) {}\n\n  @Post()\n  create(\n    @Body() createWorkspaceDto: CreateWorkspaceDto,\n    @Request() req\n  ) {\n    return this.workspacesService.create(createWorkspaceDto, req.user.id);\n  }\n\n  @Get()\n  async findAll(\n    @Request() req,\n    @Query('page') page: number,\n    @Query('pageSize') pageSize: number\n  ) {\n    return await this.workspacesService.findAll(req.user.id, page, pageSize);\n  }\n\n  @Get(':id')\n  async index(@Param('id') id: string) {\n    return await this.workspacesService.index(+id);\n  }\n\n  @Get('getWorkspaceName/:id')\n  async getWorkspaceName(@Param('id') id: string) {\n    return await this.workspacesService.getWorkspaceName(+id);\n  }\n\n  @Put(':id')\n  async update(@Param('id') id: string, @Body() updateWorkspaceDto: UpdateWorkspaceDto) {\n    return await this.workspacesService.update(+id, updateWorkspaceDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.workspacesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspacesModule.html":{"url":"modules/WorkspacesModule.html","title":"module - WorkspacesModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspacesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkspacesModule\n\n\n\ncluster_WorkspacesModule_providers\n\n\n\n\nWorkspacesService\n\nWorkspacesService\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nWorkspacesModule -->\n\nWorkspacesService->WorkspacesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/workspaces/workspaces.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkspacesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkspacesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkspacesService } from './workspaces.service';\nimport { WorkspacesController } from './workspaces.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Workspaces } from '@/entities';\nimport { PipelinesModule } from '../pipelines/pipelines.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Workspaces]),\n    PipelinesModule\n  ],\n  controllers: [WorkspacesController],\n  providers: [WorkspacesService],\n})\nexport class WorkspacesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspacesService.html":{"url":"injectables/WorkspacesService.html","title":"injectable - WorkspacesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/workspaces/workspaces.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                getWorkspaceName\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(workspacesRepository: Repository, pipelinesService: PipelinesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/workspaces/workspaces.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspacesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pipelinesService\n                                                  \n                                                        \n                                                                        PipelinesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWorkspaceDto: CreateWorkspaceDto, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWorkspaceDto\n                                            \n                                                            CreateWorkspaceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(id: number, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWorkspaceName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorkspaceName(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        index\n                        \n                    \n                \n            \n            \n                \n                        \n                    index(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateWorkspaceDto: UpdateWorkspaceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/workspaces/workspaces.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWorkspaceDto\n                                            \n                                                            UpdateWorkspaceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateWorkspaceDto } from './dto/create-workspace.dto';\nimport { UpdateWorkspaceDto } from './dto/update-workspace.dto';\nimport { Workspaces } from '@/entities';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PipelinesService } from '../pipelines/pipelines.service';\nimport * as dayjs from 'dayjs'\n\n@Injectable()\nexport class WorkspacesService {\n\n  constructor(\n    @InjectRepository(Workspaces) private workspacesRepository: Repository,\n    private pipelinesService: PipelinesService,\n  ) {}\n\n  async create(createWorkspaceDto: CreateWorkspaceDto, id: number) {\n    const existed_workspace = await this.workspacesRepository.findOne({where: {name: createWorkspaceDto.name}});\n    if (existed_workspace) {\n      throw new BadRequestException('Your workspace name is already existed!');\n    }\n\n    const newWorkspace = new Workspaces();\n    newWorkspace.dashboard = createWorkspaceDto.dashboard;\n    newWorkspace.name = createWorkspaceDto.name;\n    newWorkspace.pipeline = createWorkspaceDto.pipeline;\n    newWorkspace.is_deleted = 0;\n    newWorkspace.user_created_id = id;\n    newWorkspace.number = 0;\n    const savedWorkspace = await this.workspacesRepository.save(newWorkspace);\n\n    return {\n      status: 'success',\n      message: 'Created workspace successfully !',\n      data: savedWorkspace\n    };\n  }\n\n  async findAll(id: number, page: number = 1, pageSize: number = 10) {\n\n    page = Math.max(1, page);\n    pageSize = Math.max(1, pageSize);\n\n    const offset = (page - 1) * pageSize;\n    const pageBegin = offset + 1;\n    const pageEnd = pageBegin + pageSize - 1;\n\n    const totalItems = await this.workspacesRepository.count({\n      where: { user_created_id: id, is_deleted: 0 }\n    });\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    const workspaces = await this.workspacesRepository.find({\n      where: { user_created_id: id, is_deleted: 0 },\n      skip: offset,\n      take: pageSize,\n      order: {\n        createdAt: 'desc'\n      }\n    });\n\n    const data = await Promise.all(workspaces.map(async (workspace) => {\n      const pipeline_name = await this.pipelinesService.getPipelineNameFromId(workspace.pipeline);\n      const formatted_date = dayjs(workspace.createdAt).format('DD/MM/YYYY');\n      const updatedAt = dayjs(workspace.updatedAt).format('DD/MM/YYYY');\n      return {\n        id: workspace.id,\n        name: workspace.name,\n        number: workspace.number,\n        createdAt: formatted_date,\n        pipeline_name: pipeline_name,\n        updatedAt\n      }\n    }));\n\n    return {\n      status: 'success',\n      message: 'List all workspaces',\n      data,\n      totalItems: totalItems,\n      totalPages: totalPages,\n      pageBegin,\n      pageEnd\n    };\n  }\n\n  async index(id: number) {\n    const workspace = await this.workspacesRepository.findOne({where: {id}});\n    if (!workspace) {\n      throw new BadRequestException('That workspace could not be found')\n    }\n    return {\n      status: 'success',\n      message: 'got workspace successfully!',\n      data: workspace\n    };\n  }\n\n  async getWorkspaceName(id: number) {\n    const workspace = await this.workspacesRepository.findOne({where: {id}});\n    if (!workspace) {\n      throw new BadRequestException('That workspace could not be found')\n    }\n    return {\n      status: 'success',\n      message: 'getWorkspaceName successfully!',\n      data: workspace.name\n    };\n  }\n\n  async update(id: number, updateWorkspaceDto: UpdateWorkspaceDto) {\n    const workspace = await this.workspacesRepository.findOne({where: {id}});\n    if (!workspace) {\n      throw new BadRequestException('That workspace could not be found')\n    }\n    await this.workspacesRepository.update({id}, {...updateWorkspaceDto});\n\n    return {\n      status: 'success',\n      message: 'Updated successfully!'\n    }\n  }\n\n  async remove(id: number) {\n    const workspace = await this.workspacesRepository.findOne({where: {id}});\n    if (!workspace) {\n      throw new BadRequestException('That workspace could not be found')\n    }\n    await this.workspacesRepository.update({id}, {is_deleted: 1});\n    return {\n      status: 'success',\n      message: 'Deleted successfully!'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/analysis.entity.ts\n            \n            entity\n            Analysis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/gene_clinical_synopsis.entity.ts\n            \n            entity\n            GeneClinicalSynopsis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/patient_information.entity.ts\n            \n            entity\n            PatientInformation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/pipelines.entity.ts\n            \n            entity\n            Pipelines\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/samples.entity.ts\n            \n            entity\n            Samples\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/uploads.entity.ts\n            \n            entity\n            Uploads\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/users.entity.ts\n            \n            entity\n            Users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/workspaces.entity.ts\n            \n            entity\n            Workspaces\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/helpers/util.ts\n            \n            variable\n            comparePasswordHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/helpers/util.ts\n            \n            variable\n            hashPasswordHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/helpers/util.ts\n            \n            variable\n            saltOrRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/analysis/analysis.controller.ts\n            \n            controller\n            AnalysisController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/analysis/analysis.service.ts\n            \n            injectable\n            AnalysisService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/analysis/dto/create-analysis.dto.ts\n            \n            class\n            CreateAnalysisDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/analysis/dto/update-analysis.dto.ts\n            \n            class\n            UpdateAnalysisDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/patient-information/dto/create-patient-information.dto.ts\n            \n            class\n            CreatePatientInformationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/patient-information/dto/update-patient-information.dto.ts\n            \n            class\n            UpdatePatientInformationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/patient-information/entities/patient-information.entity.ts\n            \n            class\n            PatientInformation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/patient-information/patient-information.controller.ts\n            \n            controller\n            PatientInformationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/patient-information/patient-information.service.ts\n            \n            injectable\n            PatientInformationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/pipelines/dto/create-pipeline.dto.ts\n            \n            class\n            CreatePipelineDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/pipelines/dto/update-pipeline.dto.ts\n            \n            class\n            UpdatePipelineDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/pipelines/pipelines.controller.ts\n            \n            controller\n            PipelinesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/pipelines/pipelines.service.ts\n            \n            injectable\n            PipelinesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/samples/dto/create-sample.dto.ts\n            \n            class\n            CreateSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/samples/dto/update-sample.dto.ts\n            \n            class\n            UpdateSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/samples/samples.controller.ts\n            \n            controller\n            SamplesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/samples/samples.service.ts\n            \n            injectable\n            SamplesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/uploads/dto/create-upload.dto.ts\n            \n            class\n            CreateUploadDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/uploads/dto/update-upload.dto.ts\n            \n            class\n            UpdateUploadDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/uploads/uploads.controller.ts\n            \n            controller\n            UploadsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/uploads/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/workspaces/dto/create-workspace.dto.ts\n            \n            class\n            CreateWorkspaceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/workspaces/dto/update-workspace.dto.ts\n            \n            class\n            UpdateWorkspaceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/workspaces/workspaces.controller.ts\n            \n            controller\n            WorkspacesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/workspaces/workspaces.service.ts\n            \n            injectable\n            WorkspacesService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 2.0.2\n        \n            @nestjs/common : 10.3.10\n        \n            @nestjs/config : 3.2.3\n        \n            @nestjs/core : 10.3.10\n        \n            @nestjs/jwt : 10.2.0\n        \n            @nestjs/mapped-types : 2.0.5\n        \n            @nestjs/mongoose : 10.0.10\n        \n            @nestjs/passport : 10.0.3\n        \n            @nestjs/platform-express : 10.3.10\n        \n            @nestjs/swagger : ^8.1.0\n        \n            @nestjs/typeorm : 10.0.2\n        \n            api-query-params : 5.4.0\n        \n            bcrypt : 5.1.1\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            cookie-parser : 1.4.7\n        \n            dayjs : 1.11.12\n        \n            db-migrate : 0.11.14\n        \n            db-migrate-mysql : ^3.0.0\n        \n            handlebars : 4.7.8\n        \n            mongoose : 8.5.1\n        \n            mysql2 : 3.11.3\n        \n            nodemailer : 6.9.14\n        \n            passport : 0.7.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.2.2\n        \n            rxjs : 7.8.1\n        \n            typeorm : 0.3.20\n        \n            uuid : 10.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnalysisStatus   (src/.../analysis.entity.ts)\n                        \n                        \n                            UserRole   (src/.../users.entity.ts)\n                        \n                        \n                            UserStatus   (src/.../users.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/entities/analysis.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        AnalysisStatus\n                    \n                \n                        \n                            \n                                 QUEUING\n                            \n                        \n                        \n                            \n                                 ANALYZING\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ANALYZED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VEP_ANALYZED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 IMPORTING\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 FASTQ_QUEUING\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 FASTQ_ANALYZING\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 FASTQ_ERROR\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n\n    src/entities/users.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMôi trường chạy dự án: Node.js v20.11.1\nVề tác giả\n\nNguyen Quoc Khanh (A45081 - TLU)\n\n===\nCác bước cài đặt: (chế độ development)\n\nclone code\ncài đặt thư viện: npm i\nUpdate file .env.development (nếu cần thiết)\nChạy dự án: npm run dev\n\n===\nCách chạy tại chế độ production:\n\nclone code\ncài đặt thư viện: npm i\nUpdate file .env.production (nếu cần thiết)\nBuild dự án: npm run build\nChạy dự án: npm run preview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalysisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PatientInformationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipelinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SamplesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspacesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalysisModule\n\n\n\ncluster_AnalysisModule_exports\n\n\n\ncluster_AnalysisModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PatientInformationModule\n\n\n\ncluster_PatientInformationModule_providers\n\n\n\ncluster_PipelinesModule\n\n\n\ncluster_PipelinesModule_providers\n\n\n\ncluster_SamplesModule\n\n\n\ncluster_SamplesModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WorkspacesModule\n\n\n\ncluster_WorkspacesModule_providers\n\n\n\n\nAnalysisService \n\nAnalysisService \n\n\n\nAnalysisModule\n\nAnalysisModule\n\nAnalysisService  -->\n\nAnalysisModule->AnalysisService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalysisModule->AppModule\n\n\n\n\n\nAnalysisService\n\nAnalysisService\n\nAnalysisModule -->\n\nAnalysisService->AnalysisModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthGuard \n\nAuthGuard \n\nAuthGuard  -->\n\nAuthModule->AuthGuard \n\n\n\n\n\nPatientInformationModule\n\nPatientInformationModule\n\nAppModule -->\n\nPatientInformationModule->AppModule\n\n\n\n\n\nSamplesModule\n\nSamplesModule\n\nAppModule -->\n\nSamplesModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nAppModule -->\n\nWorkspacesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nPatientInformationService\n\nPatientInformationService\n\nPatientInformationModule -->\n\nPatientInformationService->PatientInformationModule\n\n\n\n\n\nPipelinesService\n\nPipelinesService\n\n\n\nPipelinesModule\n\nPipelinesModule\n\nPipelinesModule -->\n\nPipelinesService->PipelinesModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nSamplesModule -->\n\nSamplesService->SamplesModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nWorkspacesService\n\nWorkspacesService\n\nWorkspacesModule -->\n\nWorkspacesService->WorkspacesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Nguyen Quoc Khanh\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePasswordHelper   (src/.../util.ts)\n                        \n                        \n                            hashPasswordHelper   (src/.../util.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            saltOrRounds   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helpers/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswordHelper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (plainPassword: string, hashPassword: string) => {\n  try {\n    return await bcrypt.compare(plainPassword, hashPassword);\n  } catch (error) {\n    console.log(error);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPasswordHelper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (plainPassword: string) => {\n  try {\n    return await bcrypt.hash(plainPassword, saltOrRounds);\n  } catch (error) {\n    console.log(error);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saltOrRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
